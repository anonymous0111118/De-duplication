int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a, b; char *c, *e; int *d; int main() { { int f = 1; d = &f; } { char g; for (; a;) *e = 0; c = &g; if (g) b = 1; } printf("%d\n", b); return 0; } 
int printf(const char *, ...), b; int a; int main() { int *c = &b; if (-(&b == c) >> 1) printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a, c; int b; int e(f) { return f; } int main() { unsigned *d = &a; if (e(~c <= (&a == d))) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 255; char c; int main() { if (c <= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; int main() { int *e = &a; d = (e == &a) >= (a | 7); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a, c; char *b = &a; int main() { char *d = &c; *b = -(&c == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a, d = {1}; int main() { a = d; a = a; printf("%d\n", a.b); return 0; } 
int printf(const char *, ...); char a; int b, d; int *c = &b; int g(h) { return h + 1; } int main() { char *e = &a, *f = &a; d = g(e == f); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); union { int e; int f; } b; unsigned char a; unsigned char *c; int *d = &b.f; int main() { *d = -(&a == (c = &a)); printf("%d\n", b.e); return 0; } 
int printf(const char *, ...); int a, b, d, e, f, g, h, i; struct k { int l; int m; int n : 1; } c; int main() { for (; e <= 0; e++) for (; f >= 0; f--) { struct k j[1] = {}; c.n = 1 != j[0].m; g = 0; for (; g <= 0; g++) if (d) if (h) i = a || b ? 0 : 1; else c = j[0]; } printf("%d\n", c.n); return 0; } 
int printf(const char *, ...); union e { int f; int g; } a, d; union { int h; int g; } c; int b, i; void j(int *k) { d.f = 2; union e *l = &a; i = -1; b = (&a == l) * i; *k &= d.g; for (; c.h <= 0; c.h++) if (b) break; } int main() { j(&b); printf("%d\n", c.g); return 0; } 
int printf(const char *, ...); char a; short **b; static short ***c = &b; char *d = &a; int e = -2L; int main() { short ***f = &b; *d = (c == f) < (e & 9); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; unsigned char *c; unsigned char d; int main() { *b = -(&d == (c = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int **b; char *c = &a; int d; void g(h) { int ***e = &b, ***f = &b; d = h <= (e == f); *c = d; } int main() { g(6); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[17]; int *b; static int *c = &a[16]; int d, *e = &d; int **f = &b; int main() { int *g = &a[16]; *g = !(0 == (b = g)); *b = *c; *f = e; *b = *c; printf("%d\n", d); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {0, 1}; int main() { *b = f; *b = *b; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &b; int main() { int *d = &b; for (; b < 9; ++b) a = *c; *d = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; static int *c = &a; int main() { int *d = &a; *d = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[7]; static int *b = &a[6]; int c; int main() { int *d = &a[6]; *d = 1; c = *b; *d = c; printf("%d\n", a[6]); return 0; } 
int printf(const char *, ...); int a[10]; int b, c; int main() { for (; b <= 9; b++) a[b] = (0, &c) == &c; printf("%d\n", a[0]); return 0; } 
int printf(const char *, ...); short a; short *b = &a; unsigned long long c; unsigned long long *d; int main() { int e = 4; *b = e ^ (d = &c) == &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, b; static const int *c = &a; int main() { a = 0; for (; a != 1; ++a) if (*c) b = 1; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, e = 3; int *b, *f = &a; short c; int **d = &b; short *g = &c; int main() { *d = &e; int **h = &b, **i = &b; *f = (h == i) >= **h; *g = a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c, *d = &a; int main() { int *e = &c; for (; b <= 40; b = b + 1) *d = (e == &c) >= printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int c(d) { return 1 + d; } int main() { short *b = &a; if (c(&a == b)) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); unsigned char a; char b; char *c = &b; unsigned char *d; int main() { int e = 4; *c = (&a != (d = &a)) + e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a, d = {0, 1}; int main() { a = d; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); struct d { int : 18; short e; short f; int : 0; } a = {0, 1}, b; int main() { struct d c = b; a = c; c.e >> printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, b, c, d, *e = &d, *f, *g; int main() { { int h = 1; g = &h; } { int i = a || b; *e = 0; if (i) for (; c < 1; c++) f = &i; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int d(e) { return e - 1; } int main() { int *c = &b; a = d(&b != c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned short a; long long b; unsigned short *c; long long *d = &b; int e; int main() { int f = 8; e = &a != (c = &a) | f; *d = e; printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); unsigned short a; int b; static int c = -1L; short *d = &a; unsigned short *e; int *f = &b; int main() { *f = ((e = &a) == &a) < c; *d = b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; *c = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a, c; short *b = &a; int d; int main() { short *e = &c; int f = 10; d = e != &c ^ f; *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); union { int h; short i; } a; short *b = &a.i; short c; short *d = &c; int *const *e; int *const **const f = &e; int main() { int *const **g = &e; a.h = 4; *d = *b > ((f != g) <= 0); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c, d; int main() { d = a ?: 1; c = 0; for (; c != 3; ++c) { int *e = &b; d = *e = a; } printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; static int **b = &a, **c = &a; int d; int *e = &d; void f(int g, int *h) { *h = g ^ 3; } int main() { f(b != c, e); printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, b, g; int *c = &a, *d = &a; unsigned **e; char f; int main() { unsigned ***h = &e, ***i = &e; *c = (g = h != i) | 2; b = *d; if (b) printf("%d\n", f); return 0; } 
int printf(const char *, ...); short a; static short *b = &a; int c; int d(e, f) { return e + f; } int main() { c = d(b != &a, 11); *b = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b; int **const c = &b; int e(f) { return 1 + f; } int main() { int **d = &b; a = e(c == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d = 4; int *b = &a; short *c; short e; int main() { *b = d <= (&e == (c = &e)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a, *d = &c, *e = &a; int g() { if (*e) return 1; return 0; } int main() { int **f = &b; **f = &b != f; *b = **f + 2; *d = g(); printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } b[4] = {1}; int a; int main() { a = 3; for (; a >= 0; a--) b[0] = b[a]; printf("%d\n", b[0].c); return 0; } 
int printf(const char *, ...); int a = 1, b, c; int *e; int *f() { if (a) { int *d[4]; for (; b < 4; b++) d[b] = &a; return d[1]; } return &c; } int main() { e = f(); *e = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[56]; static int *b = &a[27]; int c, d; int main() { *b = 1; *b = a[27]; for (; c < 7; c++) { d = 0; for (; d < 8; d++) printf("%d\n", a[c * 7 + d]); } return 0; } 
int printf(const char *, ...); int a; int *b; int c[4]; static int *d = &c[3]; int **e = &b; void f(int *g, int *h) { *g = 1; *g = **e = *h; } int main() { b = &a; f(d, &c[3]); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; static int *c = &a; int main() { for (; a < 1; a++) ; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 1, e; long long b; int **c; long long *d = &b; int main() { int ***f = &c, ***g = &c; e = (f == g) + a; *d = e; printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); int a, c, e, f, b; int *d = &a, *g = &a; int main() { int *h = &b; f = (&b == h) >= (c = 3); *d = f; if (*g) printf("%d\n", e); return 0; } 
int printf(const char *, ...); long long a; int b, d; long long *c; int *e = &b; int main() { *e = (&a == (c = &a)) >= (d ^= 4); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a, c; int main() { int *e = &c; d = e == &c; *b = d | 8; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned char *b; int *c = &a; static unsigned char **d = &b; int f(g, h) { return g * h; } int main() { unsigned char **e = &b; *c = f(2, e == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[] = {0, 0, 0, 0, 5}; static int *b = &a[4]; unsigned short c; int d; int main() { c = -28; for (; c > 6; c = c + 8) { d = a[4] >> 1; *b = d; } printf("%d\n", a[4]); return 0; } 
int printf(const char *, ...); int a; unsigned char b = 254; const char c = 0; void d(e) { a = e; } int main() { d(c >= b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; struct { int b : 1; } c; int main() { c.b = a >= 0; printf("%d\n", c.b); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a = {0, 1}, d; int main() { a = d; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; static int *c = &a; int main() { for (; a <= 0; a++) ; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 8, e; long b; long *c = &b; short d; int main() { short *f = &d; e = a ^ f != &d; *c = e; printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); const unsigned a = 4294967295; int b, c; int main() { if ((c ^ 6L) < a) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int c, a = 4, b, d; int *e() { if (d) ; else return &b; return 0; } int main() { int *f = &b; if ((f == e()) < a) printf("%d\n", c); return 0; } 
int printf(const char *, ...); short a; short *b = &a; char c; char *d; int main() { int e = 3; *b = e ^= &c != (d = &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b; int ***c; short *d = &a; int main() { int ****e = &c, ****f = &c; b = 9; *d = b > (e == f); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; short *b; short d; int main() { c = 5; if ((c ^ &d == (b = &d)) <= 0) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int b, c; int d(e, f) { return e + f; } int main() { b = d(2, &c != (a = &c)); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; static int *c = &b; static const int *d = &b; int main() { for (; a != 1; a++) { b = 1; if (*d) break; } *c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &a; int *d = &b; int e(f) { *d = f; return 0; } int main() { int *g = &a; *g = 1; *g = e(*c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[7][2]; int *b = &a[5][1]; static int *const *c = &b; static int **d = &b; int e, f; int main() { *d = &e; **c = 1; *d = 0; for (; f < 7; f++) printf("%d\n", a[f][1]); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b, *e = &a; int main() { int **f = &c; b = f != &c; int *d = &b; *d |= 8; *e = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d, e; char b; char *c = &b; int main() { int *f = &a; d = 0; e = f == &a ^ (10 | d); *c = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d, b, *c = &a; int f(g) { return g + 1; } int main() { int *e = &b; d = f(e == &b); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { int *c = &a, *d = &b; *c = &b != d; *c ^= 7; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; unsigned short **c; int main() { unsigned short ***e = &c, ***f = &c; d = 4; *b = d ^ f == e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a = {0, 0, 1}, b, *c = &b; int main() { *c = a; *c = *c; printf("%d\n", b.f); return 0; } 
int printf(const char *, ...); int a, b, *d = &a; static int *c = &b; int e(f) { return 1 + f; } int main() { *d = e(c == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); struct { int e; int f; int g; } b, d, *c = &b, h = {1}; int a; int main() { for (; a <= 1; ++a) { for (;;) { d = *c; break; } *c = h; *c = *c; } printf("%d\n", d.e); return 0; } 
int printf(const char *, ...); int a, b; unsigned c; int *d = &a; int main() { unsigned *e = &c; b = 1; *d = b + (e == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; static int d = 2; int main() { int *e = &b; *c = d | &b != e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &b; int *d, *e, *f = &a; int main() { int **g = &d; e = &b; *g = e; *d = 1; *f = *c; int *h = &b; *h = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; } a, *b = &a, d = {1}; int main() { *b = d; *b = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; a = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; char *b; int c; int e(f) { return f - 1; } int main() { char *d = b = &a; c = e(b != d); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int c(f) { return f - 1; } int main() { int *d = &a, *e = &a; b = c(d != e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int **c; int ***d = &c; int main() { int *e = &a, *f = &b; *d = &e; *c = f; for (;;) { **c = 0; break; } *e = 1; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a, c; char *b; unsigned d(e) { return e - 1; } int main() { if (d(&c != (b = &c)) <= (&c != 0)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a = 1; int *const b = &a; static int *const *c = &b; int main() { **c = 0; if (*b) **c = 0; else **c = 1; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 7; int *b, *d = &a; int main() { int **e = &b, **f = &b; *d = (f == e) < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a[84]; static char *b = &a[14]; int c; int main() { a[14] = 1; a[14] = *b; for (; c < 7; c++) printf("%d\n", a[c * 7]); return 0; } 
int printf(const char *, ...); unsigned short a; short b; short *c = &b; int d; int main() { unsigned short *e = &a; int f = 2502616201; d = f > (&a != e); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct c { int f; }; struct g { int h; struct c i; int j; }; int a; int *b = &a; int main() { struct g d = {}; struct g *e = &d; *e = d; if (1 ? d.i.f : 0) { &e; *b = 1; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct e { int f; int g; } a = {1}, b; int main() { struct e *c = &a, *d = &a; *c = b; *d = a; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...), a; int b[18]; static int *c = &b[17]; int main() { *c = 1; a = b[17]; *c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...), b = 1, c, d; int a; short e; int main() { short *f; if (!b) ; else { c = 0; for (; d <= 1; d++) ; } if (((f = &e) == &e) >= d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 5; int *c = &b; int main() { int *d = &a; *c = (&a == d) >= b; printf("%d\n", b); return 0; } 
int printf(const char *, ...), c; short *b; int *d = &c, *e = &c, a; unsigned f(i) { return -i; } int main() { short **g = &b, **h = &b; *d = 1 >= f(g == h); if (*e) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 8, f; int *b, *e = &a; int **const d = &b; int main() { int **g = &b; f = (d == g) < c; *e = f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; unsigned b; char *c = &a; int main() { int d = 2736331593; unsigned *e = &b; *c = (e != &b) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a, d = {1}; int main() { a = d; a = a; printf("%d\n", a.b); return 0; } 
int printf(const char *, ...); struct b { int d; }; int a; int main() { struct b c = c; c.d &&printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; int *c = &a; int main() { int d = 2; short *e = &b; *c = &b == e ^ d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, c; static const int *b = &a; int main() { int *d = &a, *e = &a; *e = 0; c = *b; *d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; const unsigned char c = 145; int *d = &b; int main() { *d = a > c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b; const unsigned char c = 176; int main() { if (b < c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 2, d; int *b = &a; int main() { int *e = &a; d = c <= (e == &a); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; int b; int *c = &b; int e(f, g) { return f + g; } int main() { long long *d = &a; *c = e(d != &a, 5); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; int *c = &a; int main() { short *d = &b; *c = -(d == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, d; char *b; char e; int main() { d = c | 3; if ((((b = &e) == &e) >= d) - a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a; int *b = &a; short *c; static short **d = &c; int f(g, h) { return g * h; } int main() { short **e = &c; *b = f(d == e, 2); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int f; } a, b; short c; int main() { int *d = &b.f; for (; c > -24; c = c - 1) { int *e = &a.f; d = e; } *d = 1; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f; char h(char i, int j) { return i + j; } int k() { ++a; return 0; } int main() { for (; c < 6; c++) f = 1; unsigned g = f; d = 8; g = g <= 0; h(d & (b &= 1), g) && k(); e = (char)(d & b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct b { int d; int e; } a, f = {0, 1}; int main() { a = f; struct b *c = &a; *c = a; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a, b, e, h, i, j, k, l, m, o, p, q, r, s, t, u, v; struct { int a; int aa; } d, n; static int c; short f; static int g; static char w; int *x = &e; unsigned short ab(ac, ad) { return ac + ad; } void main() { int y; *x = -1L; y = a + 1; for (; w != 1; w = y) { int *z = &g, *ae = &c; f = *z = (y || d.aa) <= *x; *ae = ab(61711, *z); } printf("%d\n", c); printf("", h); printf("", i); printf("", j); printf("", k); printf("", l); printf("", m); printf("", o); printf("", n.aa); printf("", p); printf("", q); printf("", r); printf("", s); printf("", t); printf("", u); printf("", v); b = 0; } 
int printf(const char *, ...); int a, b; char c; char *d = &c, *e; char **f; char ***g = &f; int h(i) { return a == 0 ? i : 0; } int main() { e = d; *g = &e; b = h(); **f = b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f; short g; unsigned char h; int main() { unsigned i = 937214; for (; b < 1; b++) { e = d <= 0; f = i + e; g = f; a = g > i; h = a - 1; c = h; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f = 1, g, h, i, k, n, o, p, q, r, s, t, u, v, w, y, z; short j; int **l, **m; int *x; static int aa(short *ab, char ac) { if (k < (((l = &x) == (m = &x)) < ac)) { for (; r; r++) p = a = 1 + d; if (a) n = z = e ?: 0 / 0; if (z) o = g = g = 0; f &= *ab = 1 & -c ^ c < 0 ?: c; u = w = 1 + d; v = v = e ?: 0 / 0; w = u = a && b > 0 > -b || a && b && 0 < -b ?: 1; y = q = r = k = d | t || (i = d == 0 != h & s); } return 0; } int main() { aa(&j, 154); printf("%d\n", f); return 0; } 
int printf(const char *, ...); struct { int a; int d; } b, c = {0, 1}; int main() { b = c; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); union { int c; int d; } a, b; int main() { b.d = 1; a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); short a; char *b; short *c = &a; int d; int g(h) { return h - 1; } int main() { char **e = &b, **f = &b; d = g(e != f); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { int *c = &b; for (;;) { int *d = &b; *d = &a != (0, &a); break; } *c |= 11; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1, b; int *c = &a; static int *const *d = &c; int main() { int **e = &c; *e = &b; **d = 0; c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int d(e, f) { return e + f; } int main() { int *b = &a, *c = &a; *b = d(11, c != b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned short b = 65533; const short c = -3L; int a; int main() { if (b == c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b, e = 8; char *c = &a; int *d; int main() { *c = e > (&b == (d = &b)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[5]; static int *b = &a[4]; short c; int main() { int *d = &a[4]; c = 20; for (; c; c = c - 2) if (*d) *b = 0; else *b = 1; printf("%d\n", a[4]); return 0; } 
int printf(const char *, ...); struct { int g; } a, b; int c, d = 1; int main() { int *e = &b.g; if (d) { int *f = &a.g; for (; c != 1; ++c) e = f; } *e = 1; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); const unsigned short a = 65535; int b, c; short d; int main() { c = d > a; if (c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b, *f; const unsigned short c = 44399; short d; int **e = &b; int main() { f = &a; *e = f; *b = d >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; int b, d, c, *e = &b, *f = &b; int main() { long long *g = &a; d = 4; *e = (g != &a) + d; if (*f) printf("%d\n", c); return 0; } 
int printf(const char *, ...); char *a; int b, c; int *d = &c; int main() { char **e = &a, **f = &a; int g = 7; b = e != f ^ g; *d = b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, d = 2; char b; int *c = &a; int main() { char *e = &b; *c = (e == &b) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned short b; unsigned short *c; char d(e, f) { return e * f; } int main() { if (d((c = &b) == &b, 6)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int c[2]; static int *d = &c[1]; int main() { for (; b < 5; b = b + 1) { *d = 0; a = c[1]; *d = 1; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a, *c; int main() { int d = 1; *b = d + ((c = &d) == &d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 5, c, g; char b; short d; short *f = &d, *h = &d; int *i = &c; int main() { char *j = &b, *e = &b; *f = (j == e) >= a; g = *h; *i = g; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int d(e, f) { return e + f; } int main() { int *c = &a; b = d(c != &a, 5); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int a; int b; int c; } d = {0, 0, 1}, e, *f = &d; int main() { *f = e; *f = *f; printf("%d\n", d.c); return 0; } 
int printf(const char *, ...); int *a; int b, c, d, e, f, h, j; static int *g = &f; int i[][5] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}; int main() { for (; c <= 1; c++) { b = 1; for (; b >= 0; b--) { int *k = &h; e = 0; for (; e <= 0; e++) if (i[3][c + 1]) ; else *k = *g = j; *g = 1; if (d) if (*a) break; } } printf("%d\n", h); return 0; } 
int printf(const char *, ...); int a, f, b, *e = &a; short c; short *d = &c; int main() { int *g = &b; f = -(&b == g); *e = f; *d = a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; static int *c = &a, *e = &b; static const int *d = &a; int main() { a = 1; *e = *d; *c = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); short b; char a; int main() { int c = 4; short *d = &b; if (c * (d == &b)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, e = 1; int *b, *d = &c, *f = &a; int *g() { for (;;) { if (e) { *f = 1; return f; } if (d) return d; } } int main() { int i; int **h = &b, **j = &b; *h = g(); *d = 0; *j = 0; i = 0; for (; i < 6; i++) printf("%x\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &b, g; int main() { *c = g; a = *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f, g, h, i, j, k, l, m, o, p, r, q, t; char n, s; long u(x) { for (; q; q++) r = 0; t = 1 | 1 >> c; char v = x, w = t; s = w == 0 || v && w == 0 ? v : v % w; e = s; return 0; } void y(unsigned x, int *z) { l = b ?: x; if (l) { u(x); e = 0; for (; e >= 0; e--) for (; p; p++) o = 0; h = *z = 0; } i = 0; for (; i <= 0; i++) { f = 0; for (; f <= 0; f++) m = x || (a = 1) ? x : 0; n = m; k = j = d <= n; h = u(); } } int main() { y(169, &g); printf("%d\n", j); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); static int a = 9, b; short c; int main() { short *d = &c; b = (d == &c) - a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; } a, b = {1}, *c = &b; int main() { *c = a; *c = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); char a; int b; const unsigned char c = 166; int main() { b = a >= c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 10; int main() { int *c = &a, *d = &a; b = b <= (c == d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[] = {0, 0, 0, 1}; static int *b = &a[3]; int main() { int *c = &a[3]; *b = 0; *b = *c; printf("%x\n", a[3]); return 0; } 
int printf(const char *, ...); int a; char *b; int *c = &a; int main() { char **d = &b, **e = &b; int f = 2; *c = e == d | f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char **a; int b, c; int main() { char ***d = &a, ***e = &a; b = 5; c = b <= (d == e); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, c; unsigned b; int e(f, g) { return f + g; } int main() { unsigned *d = &b; c = e(d != &b, 10); if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b, *e; int g(h, i) { return h + i; } int main() { int *f = e = &a; d = g(7, f != e); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a, *d = &a; *d = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 61, b; char c; int main() { unsigned char d = 107, e = a; c = d * e; b = (unsigned char)c % 107; printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; char b; char *c = &b; int main() { short *d = &a; int e = 8; e ^= &a == d; *c = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a, b; int c = 10, d; int main() { char *e = &a, *f = &a; d = (e == f) >= c; d &&printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int b(d, e) { return d + e; } int main() { int *c = &a; if (b(1, c == &a)) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a, b = {0, 0, 1}; int main() { struct d *c = &a; *c = b; *c = *c; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); char a, d; int b, f, g; int *c = &b, *h = &b; char *e = &d, *i; int j(k, l) { return k + l; } int main() { i = &a; g = j(11, &a != i); *h = g; f = *c; *e = f; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; static int *const *d = &c; int main() { c = &a; int **e = &c; **d = 1; *e = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[4]; int b = 1; static int *c = &a[3]; int main() { int *d = &a[3]; *c = 1; if (*d) b = 0; *c = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, e; int *b = &a, *f = &e, *g; int *const *const c = &b; static int *const *const *d = &c; int main() { int **h = &b; *h = f; g = **d; *g = 1; *h = 0; printf("%d\n", e); return 0; } 
int printf(const char *, ...), a; char b; char *c = &b; int *d; int e; int f(g) { return g - 1; } int main() { d = &e; a = f(&e != d); *c = a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b; char *c; int main() { int d = 8; a = d ^ (c = &b) != &b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; char c; int main() { char *e = &c; d = e != &c; *b = d | 5; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &b; int main() { int *d = &b; b = 1; a = *c; *d = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; void c(int *d) { a = 0; *d = *b; } int main() { c(&a); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; short b; short *c = &b; int main() { unsigned *d = &a; int e = 4; *c = e |= d != &a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct e { int f : 11; int g : 22; int h : 1; int i : 1; } a, b = {0, 0, 0, 1}; int main() { struct e c = b; a = c; int d = c.g; printf("%d\n", a.i); return 0; } 
int printf(const char *, ...), a; void b(c) { if (c) for (; a >= 0; a--) ; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; static unsigned *b = &a; int c, d, e; int f(g, h) { return g + h; } int i() { for (; c <= 0; c++) { e = f(b == &a, 6); d = 1 % e; if (d) return 0; } return 0; } int main() { i(); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; unsigned d; unsigned main() { unsigned *e = &d; int f = -1L; a = f + (e != &d); *c = a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; char b; int *c = &a; int main() { char *e = &b; d = 0; *c = e == &b ^ (d ^ 8); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d = -1L; const char b = 0; unsigned char c; int main() { c = d; a = b < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, *c = &a; int main() { int *d = &b; *c = -(&b == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d, e; short b; int *c = &a; int main() { short *f = &b, *g = &b; e = 2; d = e <= (f == g); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a, d = {0, 1}; int main() { a = d; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a; char *b; short c; char d; int *e = &a; int main() { c = 44866; *e = (&d == (b = &d)) < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int a; int c; } b, d = {1}; int main() { for (;;) { b = d; break; } b = b; printf("%d\n", b.a); return 0; } 
int printf(const char *, ...); int a, b; int *c, *d = &a, *f = &b; static const int *e = &b; int *const g = &b; int main() { int **h = &c; *f = 0 <= 0; int *i = &b; *i = 0; *h = g; *d = *e; *c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = -1L, c; const short b = 0; int main() { unsigned short d = a; c = b < d; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; void d(e) { int *c = &a; b = !(&a != c) >= e; } int main() { d(5); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d, e; int **b; int *c = &a; int main() { int ***f = &b, ***g = &b; e = 0 == 0 ? 4073709551612 : 0; d = 0 == 0 ? e : 0; *c = d + (f != g); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, d, e; unsigned b; short i(j, k) { return j + k; } int main() { int *f = &c; b = -19; for (; b > 6; b = i(b, 7)) { int **g = &f; *f = 1; if (a) { int h = d; *g = &h; for (; e; --e) ; } *f = **g; } printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; short b; int d(e) { return 1 + e; } int main() { short *c = &b; a = d(c == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[2]; static int *b = &a[1], *c = &a[1]; int main() { *b = 0 == 0; *c = a[1]; printf("%d\n", a[1]); return 0; } 
int printf(const char *, ...); int a; unsigned b = 3548590135; int main() { a = (2L | (b || b)) < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 4, b; int *d = &a; int main() { int *e = &b; *d = (e == &b) >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int **a; int b = 8, c; int *d = &c; int main() { int ***e = &a, ***f = &a; *d = (f == e) >= b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int *d = &a; *c = -(&a == d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int a; int b; } c, d[][7][1] = {{{}, {}, {}, {}, {}, {}, 0, 1}}; int main() { c = d[0][6][0]; c = c; printf("%d\n", c.b); return 0; } 
int printf(const char *, ...); struct { int e; } d, b; int a, c = 1; int main() { int *g = &d.e; int **h = &g; if (c) { int *f = &b.e; for (; a;) ; *h = f; } else *g; *g = 1; printf("%d\n", d.e); return 0; } 
int printf(const char *, ...); int a; void b(c) { if (1 ^ c) for (; a != 1; --a) ; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned short a = 53167; const short b = 0; int main() { if (b < a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); union f { int g; int h; }; int a; int *b; int i(union f j) { for (; a != 1; a = 1) if (j.g) return 0; return 0; } int main() { union f c = {}; union f *d = &c; int *e = &c.g; *d = c; i(*d); b = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; char b; int *c = &a; void main() { int *e = &d; *c = &d != e; *c |= 8; printf("%s %d\n", &b, a); printf(&b); } 
int printf(const char *, ...); int a, b, e; short c; int *d = &b; int main() { short *f = &c; a = &c != f; e = a + 3; *d = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int a; int c; } b, d = {0, 1}; int main() { b = d; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); int a = 1, b, c = 1, d; int e() { c = b; return 0; } int main() { d = 0; for (; d != 4; d++) a || e(); c = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...), a; void b(c) { if (c) a = c; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a, *c; void e(const int **f, int *g) { *g = 1; *g = **f; } int main() { int *d = c = b; e(&c, d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; const int *const b = &a; static const int *const *c = &b; int main() { int *d = &a; a = 0; *d = **c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a, c; int f(g) { return g - 1; } int main() { int *e = &c; d = f(e != &c); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a = 2; char *b = &a; int c; int *d = &c; int main() { char **e = &b; *d = (&b == e) >= *b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int ***a; int b; int *c = &b; int main() { int ****d = &a, ****f = &a; int e = 2; *c = f != d | e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; unsigned const b = 2987845448; int main() { if ((5L ^ c) <= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned b; int *c; int **d = &c; int main() { int f = 2; unsigned *e = &b; c = &a; **d = e == &b | f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned char **a; short b; int c(f, g) { return f - g; } int main() { unsigned char ***d = &a, ***e = &a; if (c(e == d, 3)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; int main() { int *d = &b; int e = 2501391318; *c = e <= (d != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int j; } d, e; int *a; int b, c; int **f = &a; int main() { int *g = &e.j, *h = g, *i = &d.j; b = 1; for (; b >= 0; b = b - 1) { c = 0; for (; c < 6; c = (short)c + 1) *f = h; h = i; } *a = 1; printf("%d\n", e.j); return 0; } 
int printf(const char *, ...); char a; const unsigned short b = 43412; short c; char *d = &a; int main() { *d = c > b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; char b; char *c = &b; int d, e; int main() { long long *f = &a, *g = &a; e = f == g; d = 1 + e; *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[4]; static int *b = &a[3], *c = &a[3]; int main() { *c = 1; *b = a[3]; printf("%d\n", a[3]); return 0; } 
int printf(const char *, ...); int a, b; int *c; int e(f, g) { return f * g; } int main() { int *d = &b; c = &a; *c = e(d == &b, 4); printf("%d\n", a); return 0; } 
int printf(const char *, ...), a; char b; int *c = &a; unsigned d; static unsigned *e = &d; void main() { *c = e != &d; *c ^= 7; printf("%d\n", a); printf(&b); } 
int printf(const char *, ...); unsigned char a; int b, d; void e(int *f, int g) { unsigned char *c = &a; *f = g <= (c == &a); if (*f) b = 1; } int main() { e(&d, 11); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a, *e = &d; static int *const *c = &b; int main() { int **f = &b; *f = e; **c = 1; *f = *f; printf("%d\n", d); return 0; } 
int printf(const char *, ...); const unsigned char a = 247; int b; char c; int main() { if (c >= a) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, g, i; struct m { long long n; } f; struct { struct m o; } d, e; int *c = &b; long long *h = &e.o.n; struct m *l = &d.o; int p(p1) { return p1 || a; } void q() { struct m *j = &e.o; if (c) { if (p(g & (*h = 0 == 0))) c = 0; } else { struct m *k = &d.o; i = 0; j = k; } *j = f; } int main() { q(); *l = e.o; printf("%d\n", (int)d.o.n); return 0; } 
int printf(const char *, ...); const unsigned short a = 65535; int b; short c; int main() { if (c > a) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {0, 0, 1}; int main() { *b = f; *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int *d = &a; *c = &a != d; *c |= 8; printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; short *b = &a; char c; char *d; int main() { int e = 8; *b = e | &c == (d = &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {0, 0, 1}; int main() { *b = f; *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; *c = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int *d = &b; int main() { int *e = &a; *d = (e == &a) < (c = 3); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[224]; static int *b = &a[69]; int c, d, e; int main() { int *f = &a[69]; *b = 1; e = *f; *b = e; for (; c < 8; c++) ; for (; d < 7; d++) printf("%d\n", a[c * 8 + d]); return 0; } 
int printf(const char *, ...); int a, b; int main() { int *c = &a, *d = &a; b = d == c; *d = b ^ 7; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a, d; short *b, *c = &a; int main() { *c = -(&d == (b = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 2, c; int main() { int *d = &a, *e = &a; c = (d == e) >= b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a = 1, c, e; static const int *b = &a; int *d = &c; int main() { int *f = &a; *f = 0; *f = e = *b; *d = e; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c; int d(e) { c = a == 0; return e; } int main() { if (d()) printf("%d\n", b); return 0; } 
int printf(const char *, ...); const unsigned char a = 250; char b; int c; int main() { c = b < a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); char a; long long b; char *c = &a; int d; int f(g, h) { return g + h; } int main() { long long *e = &b; d = f(e != &b, 8); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int f(g) { return g - 1; } int main() { int *d = &c, *e = &c; *b = f(e != d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); short a; int b; int main() { int c = 1; short *d = &a; b = (&a == d) + c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b; int d(e, f) { return e + f; } int main() { char *c = &a; b = d(8, c != &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; } b = {6}; int a; short c, f; short *g = &c; int main() { struct d h = b; short *i = &f; a = h.e <= (&f == i); *g = a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { char *d = &b; int e = 8; *c = &b == d ^ e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct c { int d; int g; int h; } a, b = {0, 0, 1}; int main() { struct c *e = &b, *f = &b; *e = a; *f = *e; printf("%d\n", b.h); return 0; } 
int printf(const char *, ...); int *a; static int b = 1, d; int **const c = &a; int main() { if (b + (&a == (0, c))) printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; char b, c = 4; char *d = &b; void f(char *g) { int *e = &a; *d = *g > (e == &a); } int main() { f(&c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct c { long e; int f; } a, g = {0, 1}; int main() { struct c *b = &a, *d = &a; *d = g; *b = a; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, b, c, d; int main() { int *e = &c; if ((e == &c) < (b | 2) <= d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int **a; int b; int *c = &b; int main() { int ***d = &a, ***e = &a; *c = -(d == e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; short b; short *d = &b; int e(f) { return a ?: f; } int main() { c = e(); *d = c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; void e(f) { int *d = &a; *c = f <= (&a == d); } int main() { e(2); printf("%d\n", b); return 0; } 
int printf(const char *, ...); union { int g; int h; short i; } b, d; short a; short *c = &b.i; int main() { short *e = &a; int f = 5; f |= e == &a; d.h = f; *c = d.g; printf("%d\n", b.h); return 0; } 
int printf(const char *, ...); struct e { int f; int g; } a, *b; void h(struct e *i) { b = i; } int main() { struct e c = {}; struct e *d = &c; a = *d = c; h(&c); printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); short a; char *b; static char **c = &b; short *d = &a; int e; int g(h) { return h - 1; } int main() { char **f = &b; e = g(c != f); *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int a; int b; int c; } d, *e = &d, f[] = {0, 0, 0, 0, 0, 0, 0, 1, 1, 1}; int main() { *e = f[3]; *e = *e; printf("%d\n", d.a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, c = {0, 0, 1}, *b = &a; int main() { *b = c; *b = *b; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct d { int e : 10; char f; int g : 9; int h : 1; } a = {0, 0, 0, 1}, b; int main() { struct d c = a; b = c; printf("%d\n", b.h); return 0; } 
int printf(const char *, ...); int a, c; char b; char *d = &b; int main() { int *e = &a; c = 1 << 1; *d = (e == &a) < c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%x\n", a.f); return 0; } 
int printf(const char *, ...); short a; int b; int *c = &b; int main() { short *d = &a; *c = -(&a == d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; unsigned short **b; int main() { int d = 6; unsigned short ***e = &b, ***f = &b; if (f != e ^ d | c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; void c(d) { if (d) *b = 0 <= 0; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int a; int d; int f; } b, c = {0, 0, 1}, *e = &b; int main() { *e = c; for (;;) { *e = *e; break; } printf("%d\n", b.f); return 0; } 
int printf(const char *, ...); int a; short f, b; int *c = &a, *d = &a; const unsigned short e = 65535; int main() { *c = f >= e; if (*d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); const short a = 0; int b, d; unsigned short c; int main() { c = 39059; d = a > c; if (d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int main() { int *c = &a, *d = &a; b = -(d == c); *d = b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, d = 1; int *const volatile b = &a; char c; char *e = &c; int g() { for (;;) { int *f = &a; *e = *f = 0; *f = *b; if (d) return 0; } } int main() { g(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d = 1; int *b = &a; static int *const *c = &b; int main() { int **f = &b, **e = &b; *e = &d; **c = 0; *f = 0; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, b, c, *e = &a; int *d; int main() { for (; a <= 1; a++) ; b = ((d = &c) == &c) < *e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; char c; int main() { int e = 7; char *f = &c; d = e | f != &c; *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; short b; char *c = &a; int main() { int d = 10; short *e = &b; *c = e != &b ^ d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; short c; int main() { short *d = &c; int e = 3; *b = e |= d == &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct f { int h; } b = {1}, d, *e = &b; short a; short *c = &a; int main() { *e = d; *e = b; struct f g = b; *c = g.h; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; char b; char *c = &b; int g(h, i) { return h - i; } int main() { int *e = &a, *f = &a; d = g(e == f, 2); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); unsigned char a; unsigned char *b; int c; int d(e, f) { return e * f; } int main() { c = d(7, (b = &a) == &a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); char a, c = 1; int b, d; int main() { d = 0; for (; d >= 0; d--) if (b) { char *e = &c; *e = a; } c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b, e; short *c; int *d = &b; int f(g, h) { return g + h; } int main() { e = f((c = &a) != &a, 6); *d = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[5]; static int *b = &a[4]; char c; char *d = &c; int main() { int *e = &a[4]; *b = 1; *d = *e; *b = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {0, 0, 1}; int main() { *b = f; *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a, b = 1; static const int *c = &b; int *d = &a; int main() { int *e = &b, *f = &b; *f = 0; a = 1; if (*c) *d = 0; *e = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; unsigned short b; int *c = &a; int main() { unsigned short *e = &b; d = 1 << 1; *c = 0 >= (&b != e) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {1}, b; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); unsigned char b = 255; const char c = 0; int a; int main() { if (c < b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *const b = &a; static int *const *c = &b; int main() { int *d = &a; *d = 1; *b = **c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 255; int *c = &a; char d; int main() { *c = d >= b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, e; char b; char *c = &b; int *d; int g(h, i) { return h - i; } int main() { int *f = d = &a; e = g(d == f, 5); *c = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; short b; short *d = &b; char *e; int main() { int f = 0; char *c = &a; e = c; *d = e != &a ^ f | 10; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int *d = &a; b = (d == &a) < (c = 5); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a, d = {0, 1}; int main() { a = d; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); char a; int d, b; char *c = &a, *e = &a; int main() { *c = 6; int *f = &d; int g = *e; *f = g <= (&d == f); if (*f) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; const short b = 0; unsigned short c; int main() { c = 38773; if (b >= c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; char *c; char d; int main() { int e = 3; *b = (c = &d) == &d | e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { char *d = &b; *c = &b == d; *c |= 5; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; void b(c) { for (; a <= 0; a++) if (c) break; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 0; unsigned b; short c; short *d = &c; int main() { unsigned *e = &b; *d = e != &b | 9 ^ a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; unsigned *b; static unsigned **c = &b; int *d = &a; int main() { unsigned **e = &b; *d = c != e; *d |= 5; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; void c(int *f) { *b = *f; } void g() { int d, e; c(&e); } int main() { g(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b, e; long long c; short *d = &a; int main() { long long *f = &c; e = 1; b = (f != &c) - e; *d = b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, e, f, g; int *b = &a; static int *const *c = &b; int **d = &b; int main() { f = -5; for (; g > -2; g = f) { int **h = &b; *d = &e; if (d == &b) **c = 1; *h = 0; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; unsigned b; int main() { unsigned *c = &b; int d = 10; d ^= c != &b; d &&printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a, *e; static int c = 6; int main() { *b = (e = &d) != &d | c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a, *d = &a; *d = b != 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; char b; char *c = &b; int main() { long d = 2; long long *e = &a; *c = d | e != &a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b; char *c; int *d = &a; int main() { int e = 5; *d = e ^ &b != (c = &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { unsigned char c; a = !0 & ((1 | b) ^ 9); c = a - 1; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, c; short *b; int *d = &a; short e; int main() { c = (b = &e) != &e; *d = ~0 + c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; unsigned short *c; int *d = &a; unsigned short *const e = &b; int f(int g, char h) { return g / h; } int main() { *d = f(e == (c = &b), 255); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; a = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; int c(d, e) { return d + e; } int main() { short *f = &b; if (c(f != &b, 4)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; int b; int main() { for (; b < 1; b = 1) { a = 4; for (; a > 1; a = a - 5) ; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, e; int *b = &a; static int **c = &b; static int *const *d = &b; int main() { *c = &e; **d = 0; *c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; char b; char *c = &b; int main() { int *e = &a, *f = &a; d = 3; *c = (e == f) < d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, c = {0, 1}, *b = &a; int main() { *b = c; *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int *a; int **b = &a; int c, d, f; int *e = &c; int main() { { d = 1; int g = 0; *b = &g; } { int h = 1; for (; f;) ; *e = 0; *b = &h; if (*a) d = 0; } printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, b, c, d; int main() { int e = -675; d = 1; a = (c = d) && 1; char f = a, g = e; f > 0 && f > 127 - g || printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, e, b, *d = &a; int *c; int f(g) { return 1 + g; } int main() { e = f(&b == (c = &b)); *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; int d(e, f) { return e * f; } int main() { char *c = &a; b = d(7, &a == c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[5]; static int *b = &a[4]; int c, d; int *e = &c; int main() { int *f = &a[4]; *f = 1; d = *b; *e = d; *f = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; static int b = 7; int *const c = &a; int main() { int *d = &a; *c = d != c ^ b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, b; int *d = &a; int main() { int *e = &b; *d = 5 ^ (c = e == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a, c, g; int *b = &a, *d = &c, *e = &c; char *f; char h; int i(j, k) { return j * k; } int main() { g = i(&h == (f = &h), 8); *e = g; *b = *d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &a; int *const d = &a, *e = &b; int main() { *d = 1; *e = *c; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int b[2]; int *c = &a; int main() { int d = 2583679227; *c = (b != &b[1]) >= d; printf("%d\n", a); return 0; } 
int printf(const char *, ...), b; int a, *d = &b, *e = &b; short c; int main() { short *f = &c; int g = 9; *d = f == &c ^ g; int h = *e; if (h) printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; unsigned char c; int d; void f(g) { unsigned char *e = &c; d = g > (e == &c); *b = d; } int main() { f(5); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 3, b; int main() { int *d = &b; a = (d == &b) >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a; const unsigned *b; int e(f) { return 1 + f; } int main() { const unsigned **c = &b, **d = &b; if (e(c == d)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { b = a; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); const unsigned char a = 173; int b; char c; int main() { b = c < a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, f; void g(int *h) { b = *h; } void i(int *h) { int c = 3; int *d = &a, *e = &a; *h = c ^ d == e; } int main() { i(&f); g(&f); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct i { long j; int k; } a = {0, 1}, b, c, d, *f = &d, *g = &c; int e; int main() { struct i *h = &c; *g = a; c.k || e; *h = b; *f = *h = *h; printf("%d\n", d.k); return 0; } 
int printf(const char *, ...); int a, b; int e(f, g) { return f - g; } int main() { int *c = &a, *d = &a; b = e(d == c, 7); *d = b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c; int main() { int *d = c = &a; b = 1; if (b + (c == d)) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a = {0, 0, 1}, b; int main() { struct d *c = &a; *c = b; *c = *c; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); int a, b = 1, c, d, e, f; int h() { int g = 1 - a; if (g) return f; b = c; return 0; } int main() { d = 0; for (; d < 1; ++d) e = h(); b = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int i; } b, e = {1}, *d = &b; int a; int *c = &a, *f, g, *h; int j(int *k) { f = &a; int l = 1; *f = l + ((h = &g) == &g); for (;;) { if (*k) break; return 0; } *d = e; return 0; } int main() { j(c); printf("%d\n", b.i); return 0; } 
int printf(const char *, ...); struct { int b; int c; int d; } a[2] = {1}; int main() { a[1] = a[0]; a[1] = a[1]; printf("%d\n", a[1].b); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; short d; short *e; int main() { *b = (11 | c) <= (&d == (e = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int main() { int c = 9; int *d = &a; if (1 % (&a == d | c)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a, c; void e(f) { int *d = &c; *b = (&c == d) < f; } int main() { e(4); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; long b; long *c = &b; int d, e; int main() { char *f = &a; d = &a == f; e = d + 1; *c = e; printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); int a, b, c, d = 1, e, f; char g; int main() { a = 0; for (; a <= 21; a = a + 1) { int h = 932; b = 0; for (; b; b--) { for (; f;) for (;;) ; h = 0; } if (~(c < 0) - (h == g)) e = d; } printf("%d\n", d); return 0; } 
int printf(const char *, ...); char a; unsigned short *b; char *c = &a; unsigned short d; int main() { *c = -(0 >= ((b = &d) != &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int : 10; char c; int d : 15; int : 1; } a = {0, 1}, b[1]; int main() { a = b[0]; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b; int main() { a.c = 1; b = a; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); struct d { int e; } a, *b = &a; int main() { struct d c = c; *b = c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); struct f { int g; int h; int i; int j; int k; } a, *c = &a; int b; void l(struct f m) { *c = m; } int main() { struct f d = {}; struct f *e = &d; *e = d; l(*e); b || d.i; &e; printf("%d\n", a.k); return 0; } 
int printf(const char *, ...); int a = 1, d; int *b = &a; static int *const *c = &b; int main() { int **e = &b, **f = &b; *e = &d; **c = 0; *f = &d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, d = 6, e, b, *f = &e, *g; int main() { int *h = &b; *f = d > (h == &b); for (; c >= 0; c--) { if (*f) continue; g = &a; f = g; } *f = 1; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { int c = 11; int *d = &a; b = c | &a != d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; unsigned short d; unsigned short *e; int main() { c = -2UL; *b = c > (&d != (e = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct i { int j; } a, b, e, f = {1}, *d = &a; static const struct i *c = &b; int main() { struct i *h = &b, *g = &b; *h = f; e = *c; *d = e; *g = f; printf("%d\n", a.j); return 0; } 
int printf(const char *, ...); struct { int a; int b; int e; } c, d = {0, 0, 1}, *f = &c; int main() { *f = d; *f = *f; printf("%d\n", c.e); return 0; } 
int printf(const char *, ...); int a; char b; struct { int c; long d; } e, f = {0, 1}, *g = &e; void main() { *g = f; *g = *g; int h = e.d; printf("%s %d\n", &b, h); for (; a;) ; } 
int printf(const char *, ...); int *a; int b, c; int d(e) { return e - 1; } int main() { b = d((a = &c) != &c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; short *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; int **c; int e(f, g) { return f - g; } int main() { d = e((c = &b) == &b, 5); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct c { int d; int e; }; struct { struct c f; struct c g; } a, *b = &a, h = {0, 0, 0, 1}; int main() { *b = h; *b = *b; printf("%d\n", a.g.e); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a = {0, 0, 1}, c, *b = &a; int main() { *b = c; *b = *b; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct a { int b; int c; int d; }; struct e { int f; struct a b; int c; struct a h; int i; } g, j = {0, 0, 0, 0, 0, 0, 0, 1}; int main() { struct e k = {}; k = k; if (k.i) g = j; int *l = &k.h.b; int **m = &l; &m; printf("%d\n", g.h.d); return 0; } 
int printf(const char *, ...); short a; int b = 11; int main() { short *c = &a, *d = &a; b = (c == d) < b; if (b) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); char a; const unsigned char b = 197; int c; int main() { c = a <= b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); const char a = 0; int b, c; unsigned char d; int main() { d = 254; b = a < d; if (b) printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { a = 0; a = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; char *b = &a; unsigned c; int main() { unsigned *d; int e = -1L; *b = &c != (d = &c) | e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, *c = &a; int main() { int d = 9; int *e = &b; *c = d | e == &b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int *d = &a, *e = &a; *c = e == d; *c ^= 10; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; *c = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, b; int *c = &a; static int *const *d = &c; int main() { int **e = &c, **f = &c; *e = &b; *f = *d; **d = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a, *d; int main() { d = &a; *c = (b = d == &a) - 7; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, d; int *b = &a; static int *const *c = &b; int main() { int **e = &b, **f = &b; *e = &d; *f = *c; *b = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 1, c, d; char f(char g, char h) { return g > 0 && h && g > h || h < 0 ?: h; } int main() { int e = 2087; c = f((0, 0) ^ 1 && b, e); d = 1 % c; if (d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 50, b, f; int *c = &b; unsigned short *d; unsigned short **const e = &d; int main() { f = ((0, e) == &d) < a; *c = f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; void b(c) { a = -c; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &b; int main() { *c = a; *c = *c; printf("%d\n", b.f); return 0; } 
int printf(const char *, ...); int a, d, c; int *b = &a; int main() { int *e = &c; d = 3; *b = e != &c ^ d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; int main() { int d = 6; int *e = &b; *c = d ^ &b != e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; unsigned b; long long *c = &a; int d; int main() { unsigned *e = &b; d = -(e == &b); *c = d; printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a = {0, 1}, d; int main() { a = d; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a, b; void e(int *f) { int *c = &b, *d = &b; *f = (c == d) < (~a & 8); } int main() { e(&b); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct c { int d; int e; int f; int g; } a; struct h { struct c e; int i; }; int main() { struct h b = {}; b = b; a = b.e; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { unsigned short d; b = (a && c) == 18446744073709551613; d = b + 50839; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; int *b = &a, *c; int **d; int main() { int e = 0; int **f = &c; *b = 4 ^ e ^ f != (d = &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int **a; static int ***b = &a; int c, d; int main() { int ***e = &a; d = 0 == 0 ? 2 : 0; c = b == e ^ d; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int a; int d; } b, c = {0, 1}; int main() { c = b; c = c; printf("%d\n", c.d); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int main() { int **d = &b; c = -(&b == d); **d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 2; short *b; short d; int *e = &a; int main() { *e = (&d == (b = &d)) < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int a; int c; } b = {0, 1}, d; int main() { b = d; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; static int *d = &c; int f(g, h) { return g * h; } int main() { int *e = &c; *d = f(e == d, 4073709551613); *b = *e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 33265; short c; int main() { a = c < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct b { int d; int f; } a, g = {0, 1}; int main() { struct b *c = &a, *e = &a; *c = g; *e = a; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct d { int e : 1; char f; int g : 20; int h : 1; } a, b = {0, 0, 0, 1}; int main() { struct d c = b; a = c; printf("%d\n", a.h); return 0; } 
int printf(const char *, ...); int a; const int b = 0; char c; int d(unsigned char e) { for (; a != 1; a++) if ((b | c) > e) return 0; return 0; } int main() { d(208); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct l { int m; int n; int o; long p; } d, *i; int a, c, g, h; unsigned **b; int *e = &a; unsigned ***f = &b; unsigned **q(int *r) { for (; c <= 0; c++) { struct l j = {1, 0, 0, 0}; struct l *k = &j; for (; h;) g = 0; *k = j; if (j.m) { i = k; *r = 1; return 0; } *k = d; } return 0; } void s() { *f = q(e); } int main() { s(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; struct { int b; int e; } c, d = {0, 1}; int f() { d = c; d = d; a == 0 || 0 / 0; c = d; return d.b; } int main() { f(); printf("%d\n", c.e); return 0; } 
int printf(const char *, ...); int a, d, e; int *b = &a, *c; int f(g, h) { return g + h; } int main() { c = &e; d = f(&e != c, 5); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; int *b; int c; int main() { unsigned *d = &a; *d = &c == (b = &c); a++; printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 1, b, c; int *d = &b; unsigned e; int main() { unsigned *f = &e; c = a + (f == &e); *d = c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int b; int d; } a, c = {0, 1}; int main() { for (;;) { c = a; break; } c = c; printf("%d\n", c.d); return 0; } 
int printf(const char *, ...); short a; char b; short *c = &a; int d; int f(g) { return g - 1; } int main() { char *e = &b; d = f(&b != e); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned short a = 41704; short b; int main() { if (b >= a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a, *c; int e(f) { return 1 + f; } int main() { c = &d; *b = e(&d == c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct c { int f; int g; } a = {0, 1}, b; int main() { struct c *d = &a, *e = &a; *d = b; *e = a; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); int a, b, c; int *d = &b, *f = &b, *g = &b; static int e = 10; int main() { int *h = &c; *g = 2; *d &= e | h == &c; *f || printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int b; int d; } a = {1}, c; int main() { c = a; c = c; printf("%d\n", c.b); return 0; } 
int printf(const char *, ...); int a, d, f, i; int *b = &a, *g = &d, *h; static int **c = &b; static int *const *e = &b; int main() { h = *c = &f; **e = 1; i = *h; *c = &i; *g = *b; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; short b; const unsigned short c = 65532; int main() { a = b > c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; void d(f) { b = f; } int main() { int *e = &a; c = e == &a; d(3 ^ c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c = 9, e; int *b = &a, d; int main() { int *f = &d; e = c <= (&d == f); *b = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; *c = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; static const int *d = &c; int *const e = &c; int main() { *e = 1; *e = *d; *b = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; short b; int c; short *d = &b; int main() { int e = 4; char *f = &a; c = f == &a | e; *d = c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct f { int g; } b; int a; static struct f *c = &b; int *d = &a; const struct f e = {10}; int main() { struct f h = e; *d = h.g * (c == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int c(d) { return a == 0 ? d : 0; } int main() { if (c()) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; int f; } a = {1}, b; int main() { b = a; struct d *c = &b; *c = b; printf("%d\n", b.e); return 0; } 
int printf(const char *, ...); const unsigned short a = 65529; int b; short c; int main() { c <= a || printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; *c = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct b { int e; int f; } a; int main() { struct b c = {}; struct b *d = &c; &d; *d = c; a = c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); struct e { int f; } c = {2}; int a; int *d; int main() { d = &a; struct e g = c; int *b = &a; *d = (b == d) < g.f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, b, c, d; int main() { for (;;) { d = 0; for (; d >= 0; d--) if (a) ; else c = b <= 0; c = b <= 0; break; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct f { int g; } b = {-1L}; int a; unsigned c, d; void h(struct f i, int *j) { unsigned *e = &c; d = 1 ? i.g : 0; *j = (&c == e) < d; } int main() { h(b, &a); printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned short a = 63621; int b; short c; int main() { if (c <= a) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int b[31]; static int *c = &b[30]; int main() { int *d = &b[30], *e = &b[30]; *d = 1; a = *c; *e = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d, e; int *c = &b; int f(g, h) { for (; g;) e = a ?: 0 % 0; return h; } int main() { *c = f(0, &d == (0, &d)); printf("%d\n", b); return 0; } 
int printf(const char *, ...), a, b; int main() { int c; if (b) c = 1; for (; a < 1; a++) if (c) printf("index = %d\n", 0); return 0; } 
int printf(const char *, ...); int a, d; static int *b = &a, *e = &d; static const int *c = &a; int main() { *b = 1; *b = *e = *c; printf("%d\n", d); return 0; } 
int printf(const char *, ...); struct h { int i; }; struct { struct h j; struct h k; int l; } b, *c = &b, m = {1}; int a; int *d, *e = &a, *g = &b.j.i; int **f = &d; int main() { *f = e; *c = m; *c = *c; *d = *g; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned char a = 255; int b; char c; int main() { c > a ?: printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[3]; static int *b = &a[2]; int main() { int *c = &a[2]; *b = 1; *b = *c; printf("%d\n", a[2]); return 0; } 
int printf(const char *, ...); int a; const short b = 0; unsigned short c = 47598; int main() { a = b <= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d; int main() { int *e = &a; c = 6; d = (e == &a) >= c; if (d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int h; } b, c; int a, d; int *const e = &b.h; int main() { int *f = &c.h; if (1 > a) for (; d <= 0; d++) { int **g = &f; *g = e; } *f = 1; printf("%d\n", c.h); return 0; } 
int printf(const char *, ...); unsigned b; char a; int main() { unsigned *c = &b; int d = 7; d |= c != &b; if (1 < d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; unsigned b; char *c = &a; unsigned *d; int e; int f(g) { return g - 1; } int main() { e = f(&b != (d = &b)); *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int b, a; int c(e, f) { return e + f; } int main() { int *d = &b; if (c(&b != d, 8)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct h { int i; } a, c, f = {1}, *b = &a, **const d = &b; static struct h **const *e = &d; int main() { struct h **g = &b; *g = &c; *d = **e; ***e = f; printf("%d\n", c.i); return 0; } 
int printf(const char *, ...); int a = 1, c, d, f; int *b; int **e = &b; char g; void k(int *l) { *e = &c; int h = 3658; f = 0 || a; char i = f, j = h; g = i > 0 && j && i > j || j < 0; *l = g; *b = *l; } int main() { k(&d); printf("%d\n", c); return 0; } 
int printf(const char *, ...), a; char b = 239, c; unsigned d = 201; int main() { a = d % b; c = a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int e(f) { return f - 1; } int main() { int *d = &c; *b = e(d != &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; unsigned short c; int *d = &a; int main() { unsigned short *e = &c; b = 3; *d = (e == &c) < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct a { int b; int c; int d; } f, e, g, *h = &g; int main() { struct a i; e.d = 1; struct a *j = &e, *k = &e; *j = f; *k = *k; i = *j; *h = i; printf("%x\n", g.d); return 0; } 
int printf(const char *, ...); char a; int b, e; int *c = &b; unsigned char d = 253; int main() { *c = ((!e || e) ^ a) < d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); const unsigned char b = 247; int a; char c; int main() { if (c > b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; int main() { int *e = &a; d = 5; *c = &a != e | d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o; int p() { for (; l != 1; ++l) { o = m >= 1 ? 0 : m >> m; if (o) k = 1; if (k) return 1; n = 0 == 0 ? a : 0; i = n || b; c = g; d = j; h = e = b; } return 0; } int main() { if (p()) printf("%d\n", f); return 0; } 
int printf(const char *, ...); struct { int a; int d; } b, c = {0, 1}; int main() { c = b; c = c; printf("%d\n", c.d); return 0; } 
int printf(const char *, ...); int a = 1, d, e; int *b = &a, *g = &a, *h = &e; static int *const *c = &b; void j(int **k) { *h = **k; } int main() { int **i = &b, **f = &b; *i = &d; **c = 0; *f = 0; j(&g); printf("%d\n", e); return 0; } 
int printf(const char *, ...); static int a = 4, c; short b; char d; long e; long *f = &e; short *g = &b; void h(i) { if (a | i) b = 1; } int main() { char *j = &d; h(&d != j); c = *g; *f = c; printf("%d\n", (int)e); return 0; } 
int printf(const char *, ...); char a; int b; unsigned c; int main() { int d; b = 9; for (; b; b--) { d = c == 0 ? 196 : 196 % c; c = a = d; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a = {0, 0, 1}, b; int main() { struct d *c = &a; *c = b; *c = *c; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; static int *c = &a; int main() { a = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int e(f, g) { return f + g; } int main() { char *d = &b; *c = e(9, d != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int *d = &b; int main() { int *e = &a; c = 5; *d = c > (&a == e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct c { int d; }; int a; int *b = &a; int main() { struct c e = e, f = e; *b = f.d; printf("%d\n", a); return 0; } 
int printf(const char *, ...), a = 1, b; int *c = &b, *d = &a; static int *const *e = &c; int main() { int **f = &c, **g = &c; *f = d; **e = 0; *g = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = -7L, b; const unsigned c = 4294967295; int main() { b = (c | 0UL) <= a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b; const unsigned char c = 255; int main() { b = a < c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {1}; int main() { *b = f; *b = *b; printf("%x\n", a.c); return 0; } 
int printf(const char *, ...), b; int a, c; int main() { int *d = &c; b = 9; b = b <= (d == &c); if (b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned **a; int b = 6, c; int main() { unsigned ***d = &a, ***e = &a; c = b <= (e == d); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; unsigned short *b; int *c = &a; unsigned short d; int main() { int e = 8; *c = e | (b = &d) == &d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; unsigned short *b; long long *c = &a; unsigned short d; int e; int f(g, h) { return g + h; } int main() { e = f((b = &d) != &d, 4073709551615); *c = e; printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); int a; int b(c) { for (; a != 1; a = 1) if (c) return 0; return 0; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; short *c; short d; int main() { *b = -(&d == (c = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 39398; short c; int main() { a = c <= b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int *d = &a; b = (d != &a) < (c = -1L); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c, e; int *d = &b; int main() { int *f = &a, *g = &a; c = g != f; e = 4 + c; *d = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int e(f, g) { return f + g; } int main() { int *d = &c; *b = e(8, d != &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a = 10; static short *b = &a; char c; char *d = &c; int e; int main() { e = (b == &a) >= a; *d = e; printf("%d\n", c); return 0; } 
int printf(const char *, ...); const unsigned short a = 50571; int b; short c; int main() { b = c <= a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a, *c, *e; short b; int d, f; short *g; short **h = &g; int **i = &a; int main() { { int k = 1; c = &k; *i = &d; } { int j = 0; for (; f < 1; f++) g = &b; *a = 0; *a = j; if (*a) { e = &j; **h = 1; } } printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {0, 0, 1}; int main() { *b = f; *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a = 1, e; int *b = &a; static int *const *c = &b; int **d = &b; int main() { int **f = &b; *f = &e; b = *c; **d = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short *b; int *c = &a; short d; int main() { *c = -(&d == (b = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a, d; char *b = &a; const unsigned char c = 173; int main() { *b = d <= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int d(e) { return e - 1; } int main() { int *b = &a, *c = &a; if (!0xE45A0D00L >= d(c != b)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int c; int d() { char *b = &a; c = 1 - 5; if (b != &a | c) return 1; return 0; } int main() { if (d()) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); short a; int b, d; static int *c = &b; short *e = &a; int main() { *e = (d |= 3) <= (c == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; static int *c = &a; int main() { int *d = &a; *d = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, *c = &a; int main() { int *d = &b; int e = 2; e |= &b != d; *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d, c; int *b = &a; int main() { int *e = &c; d = 21; *b = e == &c | d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; static int *c = &a; int main() { a = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d, e; int main() { b = 1; for (; b; b = a) if (e) c = d; else c = 1; c = 0; printf("%d\n", d); return 0; } 
int printf(const char *, ...); struct e { int f; int g; } b; int *a; int main() { struct e c = {}; int *d = &c.g; b = c = c; a = d; printf("%d\n", b.f); return 0; } 
int printf(const char *, ...); int a; int *b = &a; char c; int e(f, g) { return g < f; } int main() { char *d = &c; *b = e(2517845412, d != &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; int main() { a = 23; for (; a >= 5; a = a - 9) ; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b, c = 1, d; char e; int main() { a = 1; d = 0; for (; d <= 1; ++d) { if (1 != b) { a || (c = 0); char f = b; e = f & 1 ? f : f - 1; a = e; } b = 0; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 50900; short c; int main() { a = c >= b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int e(f) { return f + 1; } int main() { int *d = &c; *b = e(d == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...), a, c, e; int **b; static int ***d = &b; int main() { int ***f = &b; e = d == f; c = 6 * e; if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int *d = &a; *c = d == &a; *c ^= 6; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, c = {0, 1}, *b = &a; int main() { *b = c; *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a = 1; char c; int main() { int b = 2; for (; b >= 0; b--) { char d = 147, e = b; c = e / d ?: d * e; if (c) ; else a = 0; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { int *e = &a, *c = &b, *d = &a; *d = c == &b; *e ^= 2; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; short b; short *c = &b; int d; int main() { char *e = &a; d = 6; *c = d > (&a == e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int **a; int b; void e(f) { int ***c = &a, ***d = &a; b = f > (d == c); } int main() { e(4); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 7; short b; char c; char *d = &c; void f(int *g) { short *e = &b; *d = *g > (e == &b); } int main() { f(&a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, c, d, f, g, h; struct { int l; } b, e; int main() { int *i = &e.l; c = 1; for (; c >= 0; c--) { g = 0 <= h ?: a; f = 0 == 0 ? g : 0; if (f) { int *j = &b.l; *i = 1; for (; d <= 0; d++) { int **k = &i; *k = j; } } } printf("%d\n", b.l); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a; int *const b = &a; static const int *c = &a; int main() { *b = 1; *b = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct e { int f; } h = {9}; int a, b; static int *c = &b, *d = &a; int main() { struct e g = h; *d = g.f <= (c == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct a { int : 15; char b; int c : 10; int : 1; } d = {0, 1}; int g; int main() { struct a e = d, f = e; if (f.c) printf("%d\n", g); return 0; } 
int printf(const char *, ...); int a, e; short **b; static short ***c = &b; int *d; int g(h, i) { return h + i; } int main() { short ***f = &b; d = &a; e = g(c != f, -1L); *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned char a = 255; char b; int main() { if (b < a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a, d; char b; char *c = &b; int g(h, i) { return h - i; } int main() { int *e = &a, *f = &a; d = g(e == f, 9); *f = d; *c = *e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; int b, c = 1; int *d = &b; int e(f) { int **g = &a, **h = &a; if (f > (g == h)) return 0; return c; } int main() { *d = e(18446744073709551615); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d : 1; } b; int a, c; int main() { a = b.d = 0 >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; void e(f) { int *d = &b; *c = (d == &b) >= f; } int main() { e(3); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a, *b = &a, f = {0, 1}; int main() { *b = f; *b = *b; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int b, c; int *d = &b; char a; void e(int *h) { int *f = &c; int g = 4139623447; *h = (f != &c) >= g; } int main() { e(&b); if (*d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned char *const *a; int b; int *c = &b; int f(g, h) { return g - h; } int main() { unsigned char *const **d = &a; unsigned char *const **e = &a; *c = f(d == e, 6); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; unsigned b; int *c = &a; int main() { unsigned *e = &b; d = 2; *c = d > (&b == e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; short *c; short e; int main() { d = -(&e == (c = &e)); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; const unsigned char c = 255; int main() { if (a < c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; int b; int *c = &b; int main() { int **d = &a, **e = &a; int f = 10; *c = e != d | f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 11, c; int *d = &c; int main() { int *e = &a; *d = b > (e == &a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); short a; int b; int *c = &b; int main() { short *d = &a, *e = &a; int f = 5; f |= d == e; *c = f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct a { int e; int f; int g; }; int main() { struct a b = {}; struct a *c = &b; int *d[] = {&b.e}; *c = b; *d[0] = printf("%d\n", b.f); return 0; } 
int printf(const char *, ...); static int a = 5, b; char c; int *d; char *e = &c; int main() { *e = (d = &b) == &b | a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; int *c = &a; long b; int main() { char d = 129; int *e = &a; a = d > (e != &a); if (*c) printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; void f(int *g) { int e = 8; d = (&a == g) + e; *c = d; } int main() { f(&a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; } a = {1}, *b = &a, d; int main() { *b = d; *b = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); short a; short *b = &a; long long c; int d; int main() { long long *e = &c; d = -(e == &c); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b, f; unsigned *c, *d; char *e = &a; int g(h) { return 1 + h; } int main() { f = g((c = &b) == (d = &b)); *e = f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int main() { int *c = &a; if (-(c == &a) < 0) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct b { int e; int f; } a, g = {0, 1}; int main() { struct b *c = &a, *d = &a; *c = g; *d = a; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int *d = &b; c = 6; if (0 >= (d != &b ^ c)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int e; int f; int g; } a, b, *c = &a, *d = &b, h = {1}; int main() { *d = h; *d = *d; *c = b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a; const char b = 0; unsigned char c; int main() { c = 242; a = b < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short *a; int b; int *c = &b; short d; int main() { *c = -(&d == (a = &d)); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct e { int f; } a, d = {1}, *const b = &a, g; static const struct e *c = &a; int main() { *b = d; g = *c; *b = g; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, e; const char b = 0; int *c = &a; unsigned char d; int main() { e = b >= (d | 188); *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; int *c = &a; int e(f, g) { return f - g; } int main() { short *d = &b; *c = e(&b == d, 5); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { int e; }; char a; char *b = &a; int main() { for (;;) { struct d c = c; *b = c.e; break; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 7; int *b = &a; long long c; int main() { long long *d = &c; *b = *b > (&c == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; char b; char *c; short *d = &a; int e(f) { return f - 1; } int main() { *d = e((c = &b) != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int d(e) { return a ?: e; } int main() { *c = d(); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a, *d = &a; short c; int main() { *d = 9; short *e = &c; *b = a <= (e == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); const unsigned char a = 168; int b; char c; int main() { c <= a &&printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; const unsigned short c = 58367; int *d = &a; int main() { *d = b <= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b; int **c = &b; int main() { int d = 0; int **e = &b, **f = &b; *c = &a; **f = e != f | d ^ 5; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; const unsigned char c = 254; char d; int main() { *b = d >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { char *d = &b, *e = &b; int f = 1; *c = (d == e) + f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a, *c = &a, *d; int main() { { int e = 1; if (a) d = &e; } { int f = 0; *b = 0; if (f) *c = 1; int *g = &f; d = g; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; unsigned short *b; short *c = &a; unsigned short d; int e; int main() { e = -((b = &d) == &d); *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; short b; static const int *c = &a; short *d = &b; int main() { int *e = &a; *e = 0; *e = *c; *d = *e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c; int *d; int main() { c = 0; a = &b == (d = &b) | ~c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 2, b; char c; int main() { char *d = &c; if (a * (d == &c)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c = 1, d, e, g, h, i; char f, j; char k() { short l; for (;; f++) { i = b >= 0 || a > 1 >> b ?: a < b; g = f; e = j; for (; d != 1; d++) { l = j >= 1 ?: j << j; if (l) c = 0; h = 0 >= f; if (h) return j; } } } int main() { k(); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a = 1; static int *b = &a; static const int *c = &a; int main() { int *d = &a; *d = 0; *b = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { int *c = &a; if (-(c == &a) > 0) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 65527; short c; int main() { a = c > b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { long c; int d; } a, *b = &a, e = {0, 1}; int main() { *b = e; *b = *b; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); short a; short *b = &a; char *c; char d; int e; int f(g) { return g + 1; } int main() { e = f(&d == (c = &d)); *b = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d; int *c; int main() { d = 1; if ((&a == (c = &a)) + d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; char *b = &a; long long c; int d; int f(g) { return g - 1; } int main() { long long *e = &c; d = f(e != &c); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; char *b = &a; short c; int d; int main() { int e = 8; short *f = &c; d = e | f != &c; *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *const b = &a; static int *const *c = &b; int main() { int *d = &a; *d = 1; *b = **c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 1, c, d, e, g, f; void i(int *j, int *k) { if (d) { *j = *k; f = 0; } } int main() { int *h = &e; c = 0; g = a + 1; for (; c <= 0; c = g) i(&e, &b); *h = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; int main() { int c = 3; short *d = &b; a = &b != d | c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, b, e; void f(int *g) { int *c = &a; int d = 3; *g = d | c == &a; b = *g; } int main() { f(&e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int b[9]; static int *c = &b[8], *d = &a; int main() { *c = 1; *d = b[8]; *c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; int b = 6, c; long long *d = &a; int main() { int *e = &c; *d = b > (e == &c); printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); struct { int d; long e; } a = {1}, b, *c = &b; int main() { *c = a; *c = *c; printf("%x\n", b.d); return 0; } 
int printf(const char *, ...); int a; static int *b = &a, *c = &a; int f(g, h) { return g + h; } int main() { int **d = &b; int *e = *d; *c = f(5, e != *d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b; short d(e, f) { return e * f; } int main() { if (d((b = &c) == &c, 4)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; void b(c) { if (c) a = 1; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { char *d = &b; *c = -(d == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, e; int *b = &a, *c = &a, *f = &e; short d; int main() { int g = 3; short *h = &d; *c = g | h != &d; *f = *b; printf("%d\n", e); return 0; } 
int printf(const char *, ...); int a, c, d; int *b = &a, f, *e; int g(h) { return 1 + h; } int main() { d = 1; for (; d <= 2; d = d + 1) { c = g((e = &f) == &f) == ((*b ^= 1) == 0); if (c) break; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; long c; long *d; int main() { *b = -((d = &c) == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 3, c; int main() { int *d = &c; a = (d == &c) >= b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; char c; int main() { char *d = &c; a = (&c == d) >= (5 | b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a; unsigned char b; int main() { int *c = &a, *d = &a; unsigned char *e = &b; b = c == d; (*e)++; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a, b, c, d = 1, e, f, g, h, k, l, m, n; unsigned i; int j[6]; void p(p1) { int o; h = 0; for (; h <= 1; h++) { e = 0; for (; e <= 0; e++) if (d) { i = 0; for (; i <= 0; i++) { m = 0 == p1; o = 1 ^ m ^ 1 & c ^ c < 0 ? m : m - 1; j[i + 1] = o; } } else for (; k; k++) { g = 0; for (; g <= 0; g++) j[0] = 0; } } for (; f; f++) n = a && 0 / 0 / 0 || a && b && a && 0 / 0 * b; h = 0 != l != i ^ n; } int main() { p(0); printf("%d\n", j[1]); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; a = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; short **b; int c, e; char *d = &a; int main() { short ***f = &b, ***g = &b; e = (f != g) < (c = -1L); *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; int *const b = &a; static int *c = &a; static const int *d = &a; int main() { *b = 0; *c = *d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = -1L; char b; unsigned c, e; char *d = &b; int main() { unsigned *f = &c; e = a; *d = (f == &c) < e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, e; char b; char *c = &b; int *d; int f(g) { return g << 1; } int main() { d = &a; e = f(&a == d); *c = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); const unsigned char a = 248; int b; int *c = &b; char d; int main() { *c = d > a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int e() { int *c = &b; for (; a <= 0; a++) { int d = 4; if (c != &b | d) return 0; } return 0; } int main() { e(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *const b = &a; static int *const *c = &b; int main() { **c = !*b; d = *b; **c = 0; printf("%d\n", d); return 0; } 
int printf(const char *, ...); struct e { int f; int g; int h; } a, c = {1}; static struct e *b = &a; int main() { struct e *d = &a; *d = c; *b = *b; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { char *d = &b; *c = d == &b; *c |= 81; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 1, c, d, e, f; int main() { e = a + 1; d = 0; for (; d < 1; d = e) { if (b) continue; b = f; c = 0; } b = 0; printf("%d\n", f); return 0; } 
int printf(const char *, ...); short a; char b; short *c = &a; void e(f) { char *d = &b; *c = (&b == d) < f; } int main() { e(2); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int c(d) { return b ?: d; } int main() { if (c()) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; unsigned c; int main() { unsigned *d = &c; b = 4073709551613; a = (d == &c) < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; void c(d) { b = d << 1; } int main() { c(); if (b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); char a; int b, c; int main() { char *d = &a; c = 1 + 1; b = (d == &a) - c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a; int c(d) { return d + 1; } int main() { int *b = &a; if (c(&a == b)) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a; unsigned char b; int *c = &a; int main() { unsigned char *d = &b; int e = -1L; *c = (d != &b) < e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, e, f, h; char *b; char c, i; char *d = &c; char *g = &c; int main() { h = 7 << a; *g = (&i == (b = &i)) < h; e = *d; if (e) printf("%d\n", f); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int d = 2; int *e = &a; *c = d | e != &a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int g; } a, b = {1}; int c; int main() { int *d = &b.g, *e = &a.g; for (; c != 9; ++c) { int **f = &e; *e = 0; *f = d; } printf("%d\n", b.g); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { int d = 7; char *e = &b; *c = d ^ e == &b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned char a; int b; int c(d) { return d + 1; } int main() { unsigned char *e = &a, *f = &a; if (c(e == f)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); char *a; char b, c; char *d = &b; int e; int f(g) { return g + 1; } int main() { e = f(&c == (a = &c)); *d = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); const unsigned char a = 247; int b; char c; int main() { b = c >= a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 9, b, c; int main() { int *d = &c; b = a > (d == &c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1, d = 1; static int *b = &a; static const int *c = &a; int main() { *b = !0xE10A4E6FL; if (*c) d = 0; *b = 0; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, e; short b; unsigned *c; unsigned **d = &c; short *f = &b; int main() { e = (*d = &a) == &a; *f = *c = 6 ^ e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, g; char b; int *c = &a, *d = &a; char *e = &b; long long *f; long long h; int i(j, k) { return j * k; } int main() { g = i(~0, &h == (f = &h)); *d = g; *e = *c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); unsigned ***a; int b; int main() { int c = 4; unsigned ****d = &a, ****e = &a; if ((c | d == e) <= 1) printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; char *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; char *b = &a; int c, d; int main() { int *e = &c; d = 209; *b = d ^ e == &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static int b; int c[4]; static int *d = &c[3], *e, *f = &a; int **g = &e; int main() { int *h = &c[3]; *g = f; b = 0; for (; b <= 1; b++) { *e = *d; *h = 1; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); union e { int f : 1; }; char a; int b, c; int main() { union e d; b = (d.f = 1 | c) >= a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, f, g, h; int *b = &a, *d = &a; char c; char *e = &c; int main() { *b = (f = &g == (0, &g)) + 1; h = *d; *e = h; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, d; short b; short *c = &b; int main() { int *e = &a, *f = &a; d = 8; *c = (f == e) >= d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int c(d) { return 1 + d; } int main() { int *b = &a; *b = c(&a == b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; short c; int main() { short *e = &c; d = e == &c; *b = 80 | d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[5]; static int *b = &a[4]; int c; int main() { int *d = &a[4]; *b = 1; c = *d; *b = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); const unsigned char a = 167; char b; int main() { if (b <= a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int *a; static int **b = &a, **e; int c; int *d = &c; int f(g) { return 1 + g; } int main() { e = &a; *d = f(e == b); printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int i; } a, c; int b, d, e; int *h; int *j() { int *f = &c.i; for (; e >= 0;) for (; b >= 0;) { for (; d;) ; int *g = &a.i; return g; } return f; } int main() { h = j(); *h = 1; printf("%d\n", c.i); return 0; } 
int printf(const char *, ...); int a = 1, b; int *c = &b; static const int *d = &a; int main() { int *e = &a; *e = 0; *c = *d; a = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct f { int g : 10; char h; int i : 9; int j : 1; } c = {0, 0, 0, 1}; int a; int *b = &a; int main() { struct f d = c, e = d; *b = e.j; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const short b = 0; unsigned short c = 33810; int main() { a = b < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; *c = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned short b = 42897; const short c = 0; int *d = &a; int main() { *d = c < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int **b = &a; int c; int *d = &c; char *e; char f; int g(h, i) { return h + i; } int main() { *b = d; *a = g(4, &f != (e = &f)); printf("%d\n", c); return 0; } 
int printf(const char *, ...); char a; int b; int d(e, f) { return e * f; } int main() { char *c = &a; b = d(c == &a, 8); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c, b; int e(f) { return f + 1; } int main() { int *d = &b; c = e(d == &b); if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct a { int d : 12; char e; int f : 9; int g : 1; }; struct { struct a h; } b = {0, 0, 0, 1}; int main() { struct a c = b.h; printf("%d\n", c.g); return 0; } 
int printf(const char *, ...); unsigned short *a; char b; char *c = &b; int d; int main() { unsigned short **e = &a, **f = &a; d = -(e == f); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); const unsigned a = 2842815697; int b, c; int main() { b = (c ^ 2L) > a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int ***b; int main() { int c; int ****d = &b, ****e = &b; c = -1; a = (d == e) < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; unsigned *c; int main() { unsigned **d = &c, **f = &c; int e = 3; *b = e | f == d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; long e; } a, c = {1}, *b = &a; int main() { *b = c; *b = *b; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, d, b; int *c = &a; int main() { int *e = &b; d = 11; *c = (e == &b) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; const unsigned char c = 248; int main() { if (a > c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *const b = &a; static int *const *c = &b; int main() { *b = 1; **c = 0; **c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 238; char c; int main() { if (c <= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 5, b; int *d = &a; int main() { int *e = &b; *d = c <= (e == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b, c = 5, d; int *e = &b; int main() { short *f = &a, *g = &a; d = f == g; *e = d >= c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, d; int *const c = &a; int main() { int *e = &a; d = 0 == 0 ? 4 : 0; if (d * (e == c)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1, b = 1; static const int *c = &a; static int *d = &a; int main() { int *e = &a; *e = 0; if (*c) b = 0; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int main() { int *b = &a; *b = 5; *b = &a != b ^ *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { long d; int e; } a, b = {0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a; int *b = &a; int d(e) { return 1 + e; } int main() { int **c = &b; *b = d(c == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b, c, e, f; int *d = &c, *g = &b, *h = &c, *i = &e, *j = &f; int l(m) { return m; } int n(char *m) { o: if (*d) { *i = b; return 0; } f = 7 ^ l(m != &a); *g = *j; *h = 1; goto o; } int main() { char *k = &a; n(k); printf("%d\n", e); return 0; } 
int printf(const char *, ...); struct { int e; int f; } a, b, c; int d; int main() { d = b.e; --a.f; b = a; c = b = b; printf("%d\n", c.f); return 0; } 
int printf(const char *, ...); int a; unsigned b; int *c = &a; int main() { int d = 5; unsigned *e = &b; *c = d + (e != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 0, b; int *c = &b; int main() { int *d = &a; *c = d != &a | 9 ^ *d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); union { int e; int f; } c; int a = 1; static const int *b = &a; static int *d = &a; int main() { a = 0; for (; c.e != 4; c.e = 4) if (*b) break; *d = 0; printf("%d\n", c.f); return 0; } 
int printf(const char *, ...); unsigned char a; int b, d; unsigned char *c; int main() { int e = 90; if ((c = &a) != &a | (d = e)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a[6][8][3]; static char *b = &a[5][7][2]; int c; static int d; int main() { d = 0; for (; d <= 1; d = d + 1) { c = 0; for (; c <= 0; c = 1) if (a[5][7][2]) break; *b = 1; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; int f(g) { return 1 + g; } int main() { int *e = &a; d = f(e == &a); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d = 1; int main() { b = 0 >= (c = a); for (; b >= 0; b--) d && (c = 1); c = 0; printf("%x\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, c = {0, 0, 1}, *b = &a; int main() { *b = c; *b = *b; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); union { int e; int f; } c; int a, b; int main() { unsigned short d; c.e = 0; b = (a != 0 | c.f) >> 1; d = b + 65533; printf("%d\n", d); return 0; } 
int printf(const char *, ...), c; short *b; int a; short d; int e(f, g) { return f - g; } int main() { c = e((b = &d) == &d, 31); if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, b; static const int *c = &a; int main() { int *d = &a, *e = &a; *e = 0; if (*c) b = 1; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int e; int f; int g; } a, d = {0, 0, 1}, *b = &a, *c = &a; int main() { *c = d; *c = *b; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); int a; int *b; int main() { b = &a; int c = 6; *b = b != &a ^ c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d, f; int *b = &a, *e = &d, *g = &a; int **c = &b; int j(k, l) { return k - l; } int main() { int ***h = &c, ***i = &c; f = j(h == i, 4); ***h = f; *e = *g; printf("%d\n", d); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a = -4L; const int b = -1L; int main() { unsigned c = a; if ((3L | c) == b) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a, c, b; int main() { int *d = &b; a = &b == d; c = a - 11; printf("%d\n", c); return 0; } 
int printf(const char *, ...); unsigned short a = 60929; const short b = 0; int main() { if (b > a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a, e; long long b; static long long *c = &b; int *d = &a; int f(g) { return 1 + g; } int main() { e = f(c == &b); *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int ***b; int *c = &a; int f(g, h) { return g + h; } int main() { int ****d = &b, ****e = &b; *c = f(2, e != d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct g { int h; } d = {4073709551615}; int a, e; int *b = &a, *c; int main() { struct g f = d; *b = ((c = &e) == &e) < f.h; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; static char *b = &a; short c; short *d = &c; int e; int main() { int f = 1; e = (b == &a) + f; *d = e; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {1}, b; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, b, c; int *d; void e(int *f) { b = *f <= ((d = &a) == &a); } int main() { c = 4165668687; e(&c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a, *d; int main() { int e = 6; *b = (&c == (d = &c)) - e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *b, *c = &a; int main() { int **e = &b, **f = &b; d = 5; *c = (f == e) >= d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int **c[6][5]; int main() { char d[][3][7] = {{}, {}, {}, {}, {}, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 145}; int ***e = &c[5][4]; if (a == d[5][2][6] < (&c[5][4] != e)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 2, c; int *d, *f = &a; static int **e = &d; int main() { int **g = &d; c = (e == g) >= b; *f = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a, b, e; int *c = &b; static int *const *d = &c; int main() { a = 1; for (; a >= 0; a--) { int **f = &c; *f = &e; **d = 1; } printf("%d\n", b); return 0; } 
int printf(const char *, ...); union { int f; int g; } b; int a, d; int *c = &b.f; int main() { int *e = &a; *c = 3 ^ (d = &a != e); printf("%d\n", b.g); return 0; } 
int printf(const char *, ...); int *a; int b; int main() { int **c = &a, **d = &a; b = -!(d != c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {0, 1}, b; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct { int c : 1; } a; int b; int main() { a.c = 0 >= b; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int main() { unsigned short d; int e = -1L; c = (a & a < 0) >= 6; d = c + e; *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { int d = -1L; char *e = &b; *c = d > (e != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short *b; short c; int *d = &a; int main() { short e = 3; c = e | &e == (b = &e); *d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a, b, *c = &a; void e(f) { short *d = &b; *c = (d == &b) >= f; } int main() { e(8); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int b; int e(f, g) { return f - g; } int main() { int **c = &a, **d = &a; b = e(c == d, 10); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 3; unsigned char *c; unsigned char d; int main() { a = (&d == (c = &d)) >= b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, e, b, *c; int *d, **f = &c; int g(h, i) { return h - i; } int main() { e = g((d = &b) == &b, 11); *f = &a; *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct a { int e; } b, *c = &b; int main() { struct a d = d; *c = d; printf("%d\n", b.e); return 0; } 
int printf(const char *, ...); int a, b, *c = &a; int main() { int d = 2; int *e = &b; *c = e == &b ^ d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int b; int **c = &a, e; int *d = &b; int main() { *c = d; int *f = &e; *a = -(&e == f); printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b, d; int *c = &b; int f(g, h) { return g + h; } int main() { char *e = &a; d = f(e != &a, 7); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b = 5, e; unsigned c; char *d = &a; int main() { unsigned *f = &c; e = (f == &c) < b; *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a, *d = &a; *d = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a, b; char *c = &b; int d; int f(g) { return g + 1; } int main() { char *e = &a; d = f(&a == e); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, e; short b; int *c = &a; unsigned short d; unsigned f; int main() { d = 47219; e = b <= (f <= (0, -1L) | d); *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a = 8, b; unsigned *c; int *d = &b; unsigned e; int main() { *d = a <= ((c = &e) == &e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b, c; int *d = &c, *f = &b; const unsigned char e = 250; int main() { for (;; b++) { if ((a <= e) - *f) break; *d = 1; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; int *b; const unsigned char c = 247; char d; int **e = &b; int main() { *e = &a; *b = d < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { int e : 13; char f; short g; char h; } a = {0, 0, 0, 1}, b; int main() { struct d c = a; b = c; printf("%d\n", b.h); return 0; } 
int printf(const char *, ...); int a; short b; int *c = &a; int main() { short *d = &b; int e = 2; *c = d != &b ^ e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int e; long f; } a, d = {0, 1}, *b = &a, *c = &a; int main() { *b = d; *b = *c; printf("%d\n", (int)a.f); return 0; } 
int printf(const char *, ...); int a, b; void e(f) { a = f; } int main() { int c = 6; int *d = &b; e((d == &b) - c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; char *c; int main() { char **d = &c, **f = &c; int e = 41; *b = d != f | e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int d; int *b, *e = &d; int **c = &b; void f(int **g) { *e = **g; } int main() { int *a; int h; *c = &h; f(&b); printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; char *b; int main() { char **c = &b, **d = &b; int e = 11; a = d == c | e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); union { int f; int g; } a; short b; int *c = &a.f; int main() { int d = 7; short *e = &b; *c = &b == e | d; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); int a = 1, b; static const int *c = &a; int main() { int *d = &a; a = 0; b = *c; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b = 188; void e() { int c; unsigned short d = b; c = d; if (c == b) a = 1; } int main() { e(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int *c = &a, *e = &a; char b, f; void g(unsigned short *j) { char *h = &f; *e = 0 < (short)(h == &f | *j); } int main() { unsigned short i = 35459; g(&i); d = *c; if (d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; int *const b = &a; static int *const *c = &b; int main() { **c = 1; d = *b; **c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned short b; int *c = &a; unsigned short *d; int e(f, g) { return f + g; } int main() { *c = e((d = &b) != &b, 3); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; short b; char *c = &a; int main() { short *d = &b; int e = 11; *c = &b == d | e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; unsigned b; int *c = &a; int f(g, h) { return g - h; } int main() { unsigned *e = &b; d = f(e == &b, 7); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d; unsigned short e; short f; int main() { d = (a <= 0) * 42; unsigned short g = d, h = 7410; f = g * h; e = f; c = e % 7410; if (c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int f; int g; int h; } a = {1}, b, c, *d = &a, *e = &a; int main() { *e = b; *e = *e; c = *d; printf("%d\n", c.f); return 0; } 
int printf(const char *, ...); char a, b; char *c = &b; int d; int main() { char *e = &a, *f = &a; d = -(f == e); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int f(g) { return g - 1; } int main() { int *d = &a, *e = &a; *c = f(e != d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; char b; short *c; char *d = &b; int main() { int e = 7; e |= &a != (c = &a); *d = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a, *d; int e(f) { return f; } int main() { *b = e((d = &c) != &c) ^ 3; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct e { int f; } a[7][1]; static struct e *b = &a[6][0]; int c = 1; int main() { int *d = &a[6][0].f; for (; c >= 0; c--) { a[0][0] = *b; *d = 1; } *d = 0; printf("%d\n", a[0][0].f); return 0; } 
int printf(const char *, ...); int a; int *b = &a; int **c; int f(g) { return 1 + g; } int main() { int ***d = &c, ***e = &c; *b = f(e == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {0, 1}, b; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, c, d; int *b = &a; int main() { int *e = &c, *f = &c; d = 5; *b = f != e | d; printf("%d\n", a); return 0; } 
int printf(const char *, ...), b = 3; int a, c; int d(f) { return f; } int main() { int *e = &c; if (d(b > (e == &c))) printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned char a = 251; char b; int c; int main() { c = b < a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, d = 10; short b; short *c = &b; int *e; int main() { *c = (&a == (e = &a)) >= d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 255; char c; int main() { if (c > b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int c(d) { return b ?: d; } int main() { if (c()) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const char b = -7L; unsigned char c = 249; int main() { if (b != c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; *c = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 255; int *c = &a; char d; int main() { *c = d < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); union e { int f; int j; } c; int a, g; int *d = &c.f; short b; int main() { int *h = &a; *d = (g = 61) <= (h == &a); union e i = c; if (i.j) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b; char *c = &b; const int d = 8; int main() { int *e = &a; *c = (&a == e) - (unsigned)d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c = 1, e, b; unsigned d; unsigned *f; int main() { e = 5 >> a; if (((&d == (f = &d)) >= e) * c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; a = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; unsigned char *c; int f(g) { return 1 + g; } int main() { unsigned char **d = &c, **e = &c; *b = f(d == e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int c(d, e) { return d + e; } int main() { int *b = &a; if (c(8, &a != b)) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a = 2, b; int *c = &b; int main() { int *d = &b; for (;;) { *c = a > (&b == d); break; } printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b; char *c = &b; int f(g, h) { return g + h; } int main() { int *d = &a, *e = &a; *c = f(d != e, 3); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int main() { int *b = &a, *c = &a; *b = b == &a; *c ^= 4; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; char *b = &a; short c; static short *d = &c; int e; int main() { for (;;) { e = -(d == &c); *b = e; break; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; int *c = &a; int e(f) { return f + 1; } int main() { short *d = &b; *c = e(&b == d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; int d(e, f) { return e + f; } int main() { int **c = &b; *b = d(c != &b, 6); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int h; } a = {1}, b; int c, d; short i(j, k) { return j - k; } int main() { int *e = &b.h; if (i(55030, d && 1) ^ 49329) for (; c;) ; else { int *f = &a.h; int **g = &e; *g = f; } *e = 0; printf("%d\n", a.h); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; int main() { int *e = &a; d = 1 + 1; *c = (e == &a) < d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); const char a = 0; int b, c = -3L; unsigned char d; int main() { d = c; a <= d || printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, e; const unsigned char b = 249; char c; int *d = &a; int main() { e = c > b; *d = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int *d = &c, *e = &c, *f = &a; int main() { int *g = &b; *e = -(g == &b); int h = *d; *f = h; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a, c; int main() { int d = 3; int *e = &c; *b = e == &c | d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { char c; unsigned char d; b = a << 14; c = b - 1; d = c; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; long long b; int *c = &a; int main() { int d = 3; long long *e = &b, *f = &b; *c = d ^ e == f; printf("%d\n", a); return 0; } 
int printf(const char *, ...), c; const unsigned char b = 249; int *d = &c, *e = &c, a; char f; int main() { *d = f < b; if (*e) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct e { int f; } a, c = {1}; static const struct e *b = &a; int main() { struct e *d = &a; *d = c; *d = *b; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, c; const unsigned b = 0; char d; int main() { d = 254; c = (d | b) >= 5L; if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {0, 1}, b; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a[6][2]; int b, c = 1, e, f, h, i; int *d, *g; int *k(int *l) { if (*l) ; else return a[5]; return &a[1][1]; } int main() { f = c; g = k(&f); int *j = &a[5][0]; d = j; b = 0; for (; b <= 0; b++) { for (; e <= 0; e++) a[1][1] = 1; *g = 0; d = 0; } for (; h; h++) i = 0; for (; i < 1; i++) printf("%d\n", a[1][1]); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b, *e = &a; static int *const *d = &c; int main() { c = e; c = *d; *c = 1; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; static char *b = &a; int c; int *d = &c; int e(f, g) { return f - g; } int main() { *d = e(b == &a, 30); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; char *b; char c; void e(int *f) { int d = -1L; *f = d + (&c != (b = &c)); } int main() { e(&a); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { b = a; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); char a; char *b = &a; short c; int main() { short *d = &c; int e = 8; *b = &c == d | e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int *d = &b; int f(g, h) { return g - h; } int main() { int *e = &a; c = f(&a == e, 10); *d = c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; static char *b = &a; int c; int d(e) { return 1 + e; } int main() { c = d(b == &a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, d; short b; short *c = &b; int f(g, h) { return g + h; } int main() { int *e = &a; d = f(3, e != &a); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { c = a ?: 1; b = -7; for (; b; b = b + 1) c = a; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int b, e; int *c = &b; int *d = &b; short f; int main() { int **g = &a, **h = &a; f = 0 == 0 ? 61714 : 0; *c = f > (g != h); if (*d) printf("%d\n", e); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int *d = &a; int e = 5; *c = d != &a ^ e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { b = a; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct g { int h; int i; int j; } a = {0, 1}, d, *e; short b; short *c = &b; int main() { struct g *f = &a; *f = d; e = &a; *e = *e; *c = a.i; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; void b(c) { if (c) for (; a <= 0; a++) ; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); char a; char *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, e, f, g; struct { int h; unsigned i : 17; } const b = {1}, d = {0, 1}; int j() { if (0 == g) e = 0; else { c = 0; return 0; } if (a || b.h) d.i && (f = d.i); return 0; } int main() { j(); printf("%d\n", d.i); return 0; } 
int printf(const char *, ...); struct { int g; } a, c; int b; int main() { int *d = &c.g; for (; b <= 1; b = b + 1) { *d = 1; int *e = &a.g; int **f = &d; *f = e; } printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); int a; int *b = &a; unsigned short c; int main() { int d = 4045717995; unsigned short *e = &c; *b = d <= (e == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, e; static const int *b = &a; char c; char *d = &c; int main() { int *f = &a; *f = 0; e = *b; *d = e; *f = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; int *b; int main() { for (; a <= 0; a = 4) ; int *c = &a; *c = (c == (b = c)) < *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a[3]; static int *b = &a[2]; int main() { int *c = &a[2]; *b = 1; *b = *c; printf("%d\n", a[2]); return 0; } 
int printf(const char *, ...); struct { long d; int e; } a, b = {0, 1}, *c = &b; int main() { *c = a; *c = *c; printf("%d\n", b.e); return 0; } 
int printf(const char *, ...); struct { int c : 1; } a; int b = 1; int main() { a.c = 0 < b; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...), b = 7, d; int a, c; int main() { int *e = &c; if (b > (e == &c) != d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int main() { int d = 4; char *e = &b; *c = e != &b | d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d, e; int *f = &c; int *g(int **h) { e && 0 / a ?: b; return h; } int main() { int *i = 0; { int *j = g(&j); } d &&*i; { int *k = f; *k = 1; *k = 0; g(&k); } printf("%d\n", c); return 0; } 
int printf(const char *, ...); static short a = 45415, d; short *b; int c; int main() { c = a <= ((b = &d) != &d); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, c = 10; int *b = &a; int main() { int *d = &a; *b = (d == &a) >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int **b; short *c; int d; char e; char *f = &e; short g; int main() { d = (&g != (c = &g)) - ((b = 0) != &a); *f = d; printf("%d\n", e); return 0; } 
int printf(const char *, ...); int a; static int *b = &a; static const int *c = &a; int main() { a = 1; *b = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 65535; short c; int main() { if (c >= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &a; int *d = &b; int main() { int *e = &a, *f = &a; *f = 1; *d = *c; *e = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; void d(e) { b = e; } void f(int *e) { int c = 7; d(c ^ &a == e); } int main() { f(&a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; int main() { int d = 1; int *e = &b; *c = (&b != e) - d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const char a = 6; unsigned char b; int main() { b = 65 * a; if (a >= b) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); char a, b; char *c = &b; int main() { char *d = &a; int e = 2; e ^= &a != d; *c = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; char b; int *c = &a; int main() { int e = 5; char *f = &b; d = (f != &b) + e; *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d = 4; unsigned long long *b; int *c = &a; int main() { unsigned long long **e = &b, **f = &b; *c = (e == f) >= d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b, c; int e(f, g) { return f + g; } int main() { short *d = &a; b = e(11, d != &a); c = 1 % b; if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; unsigned b; char *c = &a; int main() { unsigned *d = &b; int e = 5; *c = d == &b ^ e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int e(f, g) { return f - g; } int main() { int *d = &c; *b = e(d == &c, 10); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int *d = &a; c = 4; b = (d == &a | c) >> 1; if (b) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; void e(f) { int *d = &b; *c = (d == &b) >= f; } int main() { e(5); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[2]; int c; char b; int main() { int *d = &a[0]; c = -(d != &a[1]); if (1 ^ c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); static int a, b = 1, d; static const int *c = &b; int *e, *f = &d; int main() { e = &b; a = 0; for (; a <= 1; a++) { *f = *c; *e = 0; } printf("%d\n", d); return 0; } 
int printf(const char *, ...); short a = 2; char b; char *c = &b; void e(int f, short *g) { short *d = &a; *c = (g == d) < f; } int main() { e(a, &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; short *c = &b; int main() { int *d = &a; *c = -(d == &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d, b; int *c = &a; int f(g) { return g - 1; } int main() { int *e = &b; d = f(e != &b); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 60524; short c; int main() { c = b; a = c != b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; int main() { int c = 9; int *d = &b; if ((c ^ d != &b) - 1) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct g { int h; } a = {2}; int b; int *c = &b; char *d; char e; int main() { struct g f = a; *c = (&e == (d = &e)) < f.h; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f; int main() { d = 1; for (; d; d = f) { e = 1 - a; if (e) c = 1; else c = b; } c = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a, b; short *c = &b; int d, e; int main() { short *f = &a; e = f != &a; d = 10 ^ e; *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1, d; int *b = &a; static int *const *c = &b; void e(int *f) { b = f; } int main() { e(&d); **c = 0; b = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b, *c = &a; int main() { int **d = &b, **f = &b; int e = 8; *c = e ^ f != d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static int *b = &a, *d = &a; static const int *c = &a; int main() { *b = 0; *d = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; short c = 2; short *d; int main() { *b = c <= (&c == (d = &c)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d : 1; } b; int a = 1, c; int main() { c = b.d = 1 && a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int d = 5; int *e = &a; *c = d | e == &a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; short b; short *c = &b; int d; int f(g) { return 1 + g; } int main() { char *e = &a; d = f(e == &a); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[] = {0, 0, 0, 0, 1}; short b; static int *c = &a[4]; int main() { for (;;) { b = 0; for (; b <= 4; b++) *c = a[b]; break; } printf("%d\n", a[4]); return 0; } 
int printf(const char *, ...); int a, b; int d(e) { return 1 + e; } int main() { int *c = &a; if (d(c == &a)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a = {1}, c, *b = &a; void h(struct d *i) { *b = *i; } int main() { h(&c); *b = *b; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; short *c; short e; int f(g, h) { return g + h; } int main() { d = f(5, (c = &e) != &e); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 91, e; short *c; short d; char b; int main() { e = a > ((c = &d) == &d); if (e) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; const short b = 59111; unsigned short d; int main() { d = b; c = d != b; if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 6, b, e; static int *c = &b, *d; int main() { d = &b; e = d != c | a; if (e) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; *c = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; short *c; short d; int e(f) { return f + 1; } int main() { *b = e((c = &d) == &d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; unsigned short *b; short *c = &a; int d; unsigned short **const e = &b; int main() { unsigned short **f = &b; d = 60; *c = d <= (e == f); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, d = 1; unsigned b; short e = 1; unsigned *f; int *g = &c; short *h = &e; int i(j) { return 1 + j; } int main() { for (; a < 9; ++a) if (d) { d = i(&b == (f = &b)); *g = e; *h = 0; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); unsigned a; int b, c; int e(f, g) { return f * g; } int main() { unsigned *d = &a; c = e(d == &a, 10); if (c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; const unsigned short b = 61131; short c; int main() { d = c <= b; if (d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = -9L, c; unsigned char d; int main() { unsigned char e = b, f = 3; d = e * f; c = d % 3; if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a, c; static int *d = &c; int main() { int e = 6; *b = e | d != &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int c(d) { return d + 1; } int main() { char *b = &a; if (c(b == &a)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[8][1]; static int *b = &a[3][0]; int c; int main() { int *d = &a[3][0], *e = &a[3][0]; *d = 1; *e = *b; for (; c < 8; c++) printf("%d\n", a[c][0]); return 0; } 
int printf(const char *, ...); int a = 1, b; static const int *c = &a; int *d = &b; int main() { int *e = &a, *f = &a; *e = 0; if (*c) *d = 1; *f = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 1; unsigned char c; int *d = &a, *f = &b, *g = &a; char h; void i(j) { unsigned char *e = &c; *d = j > (&c == e); h = *g; if (h) *f = 0; } int main() { i(8); printf("%d\n", b); return 0; } 
int printf(const char *, ...); long long a; short b; long long *c = &a; int d, e; int main() { short *f = &b; int g = 2367820799; d = &b != f; e = d >= g; *c = e; printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); int a, b; const int c = 0; unsigned d; int main() { b = a <= ((4224987024 | d) ^ c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; unsigned short *b; int *c = &a; unsigned short e; int f(g, h) { return g * h; } int main() { d = f(31, &e == (b = &e)); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; const unsigned short c = 59076; int main() { b >= c &&printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; short *b; int *d = &a; int main() { short **e = &b, **f = &b; c = e == f; c |= 7; *d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b; short *c = &a; int main() { int *d = &b; int e = 5; *c = e ^= d != &b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, c = 1, d, e, f, g, h, i; static int b[] = {0}; int j(l, m) { return m == 0 ? l : 0; } int main() { for (; d < 1; d++) i = 1; e = 2; for (; e; e--) { g = j(a, i); f = 1 ? b[0] : 0; int k = g; h = f > k || f <= 0 && k <= 0 && k; if (a) c = 0; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c : 1; } a; int b; int main() { a.c = b <= 0; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a; short b; int *c; short *d = &b; int e(f) { return f + 1; } int main() { *d = e(&a == (c = &a)); printf("%d\n", b); return 0; } 
int printf(const char *, ...), c; int b, a; int d(f) { return f + 1; } int main() { int *e = &b; c = d(e == &b); if (c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static int c = 1; int *d = &a; int main() { int *e = &b; *d = (&b != e) - c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 1, c, d, e; int main() { d = 0; for (; d < 1; d = d + 1) if (c) a = b = e; a = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int d(e, f) { return e + f; } int main() { int *c = &b; if (d(c == &b, 8) == 1) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a; short b; int d(e) { return e - 1; } int main() { short *c = &b; a = d(c != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; static short *b = &a; char c; char *d = &c; int main() { int e; short *f = &a; e = b == f; *d = -e; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct e { int f : 9; char g; short h; char i; } a, c = {0, 0, 0, 1}, *b = &a; int main() { struct e d = c; *b = d; printf("%d\n", a.i); return 0; } 
int printf(const char *, ...); int a, b; int d(e) { return e - 1; } int main() { int *c = &a; b = d(c != &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; char c; int main() { char *d = &c; int e = -9L; *b = (d != &c) >= e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char **b; char ***const c = &b; int main() { char ***d = &b; int e = 5; a = e ^= d != c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, *c, *d; int main() { c = &a; int e; int *f = 0; if (b) *f = 0; d = &e; *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; long long c; int main() { int d = 2; long long *e = &c; *b = d | e == &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[6]; int b; static int *c = &a[5]; int main() { *c = 1; b = a[5]; *c = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char ****b; int *c = &a; int f(g) { return g + 1; } int main() { char *****d = &b, *****e = &b; *c = f(d == e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int d(e, f) { return e - f; } int main() { int *c = &a; if (d(c == &a, -1L)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 2; unsigned c; int main() { unsigned *d = &c; a = (d == &c) >= b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const short a = -1L; int b; unsigned short c = 65535; int main() { b = c != a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a, *c = &a; int main() { int e = -1L; int **f = &c; **f = e + (f != &c); d = *b; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a = 1, b; static const int *c = &a; int d() { b = 1; for (; b >= 0; b--) if (*c) a = 0; else { a = 0; return 0; } return 0; } int main() { d(); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c, d = 4, b; int main() { int *e = &a; c = (&a == e) < d; if (c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; *c = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c; int d(e) { return e + 1; } int main() { a = d((c = &b) == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct { int k; } a = {1}, e; int *b; int c, d, f; int main() { int **g = &b; for (; c <= 0; c++) { int *h = &e.k; *g = h; for (; d < 6; d++) { int *i = &a.k; *b = 0; for (; f <= 0; ++f) { int **j = &b; *j = i; } } } printf("%d\n", a.k); return 0; } 
int printf(const char *, ...); int a = 6, b; int *c = &b; char d; int main() { char *e = &d, *f = &d; *c = a <= (f == e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); char *a; long b; long *c = &b; int d; int main() { char **e = &a, **f = &a; d = 11; *c = d > (f == e); printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); char a; int b, c; int *d = &b; char *e; int main() { int f = 6; e = &a; c = e == &a | f; *d = c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%x\n", a.f); return 0; } 
int printf(const char *, ...); long long *a; int b; long long c; int d(e) { return 1 + e; } int main() { b = d(&c == (a = &c)); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; short *c = &b; int main() { int d = 9; int *e = &a; *c = d | &a != e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d, b; int *c = &a; int main() { int *e = &b; d = 5; *c = (e == &b) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; char *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; int f(g) { return g - 1; } int main() { char *d = &b, *e = &b; *c = f(e != d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b, e; char *c = &a; int *d; int f(g, h) { return g - h; } int main() { e = f(&b == (d = &b), 4); *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = -1L; char b; int *d = &a; int main() { unsigned e = c; char *f = &b; *d = e > (f == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; short b; short *c = &b; int main() { int d = 2; char *e = &a; *c = &a != e ^ d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; short *c = &b; int main() { int *d = &a; *c = -(&a == d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; int f(g, h) { return g + h; } int main() { int *e = &a; d = f(e != &a, 5); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, d; char *c, *e; int *f = &b; char *g(); void h() { c = g(&d); } char *g(char *i) { *f = ((e = i) != i) >= (a = 2972614828); return 0; } int main() { h(); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; unsigned b; int *c = &a; int e(f, g) { return f * g; } int main() { unsigned *d = &b; *c = e(31, d == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c = 5; int *b, *f; long long *d; int **e = &b; int main() { f = &a; *e = f; long long **g = &d, **h = &d; *b = c > (g == h); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 5, c; short b; int e(f) { return f; } int main() { short *d = &b; if (e(a > (&b == d))) printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; int main() { int *d = &b; int e = -1L; e |= &b == d; *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[4]; static int *b = &a[3]; int main() { int *c = &a[3]; *b = 1; *b = *c; printf("%d\n", a[3]); return 0; } 
int printf(const char *, ...); struct { int d : 1; } c; int a = 1, b; int main() { b = c.d = 0 || a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d, e; int *b = &a; char *c; char f; int main() { e = &f == (c = &f); d = -e; *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, f; short *b, *c; unsigned char ****d; unsigned char *****const e = &d; int main() { unsigned char *****g = &d; f = (e != g) - (&a != (c = b = 0)); printf("%d\n", f); return 0; } 
int printf(const char *, ...); int a; unsigned b; int main() { int c = 2; unsigned *d = &b; a = c | d != &b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d, e; static int *c = &b; int g(int *j) { int *f = &b; *j = e; for (;;) { d = 0; for (; d <= 0; d = 1) if (*c) return 0; *f = 1; } } int main() { int *h = &a, *i = &b; *i = e; g(h); *c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, *c = &a; int e(f) { return 1 + f; } int main() { int *d = &b; *c = e(d == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int main() { int *d = &a; *c = (d == &a) >= (0 != c) << 1; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, e; int *c = &b, *d; int f(g, h) { return g * h; } int main() { d = &a; e = f(d == &a, -1L); *c = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct g { int h; int i; int j; } a, b = {0, 1}, *d = &b, *e = &a; int c; int main() { c = 0; for (; c <= 1; c++) { struct g *f = &a; *f = *d; d = e; } printf("%d\n", a.i); return 0; } 
int printf(const char *, ...), c; int b, a; int d(f) { return f - 1; } int main() { int *e = &b; c = d(&b != e); if (0 <= c) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; } a = {1}, c; int b; int main() { a = c; a = a; if (a.d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { for (; b <= 0; b++) { int d[6]; d[c] = d[1] = 1; a = d[1]; } { int e[6]; e[c] = 0; a = e[1]; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 10, b; int *c = &b, *d; int main() { *c = a > ((d = &b) == &b); printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; static int b = 4073709551614, c; char *d = &a; int main() { int *e = &c; *d = b | e != &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; unsigned long long ***b; int *d = &a; int main() { unsigned long long ****e = &b, ****f = &b; c = -(e == f); *d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 9, b, e; int *c = &b, *d; int main() { *c = a > ((d = &e) == &e); printf("%d\n", b); return 0; } 
int printf(const char *, ...); unsigned char a; int b; unsigned char *c; int *d = &b; int main() { int e = 8; *d = (c = &a) != &a ^ e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b; int e(f, g) { return f + g; } int main() { char *c = &a, *d = &a; b = e(d != c, -1L); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[2]; static int *b = &a[1]; int main() { a[1] = 1; a[1] = *b; printf("%d\n", a[1]); return 0; } 
int printf(const char *, ...); int a; int *b; unsigned short *c; int main() { unsigned short **d = &c, **e = &c; int f = 5; b = &a; *b = f | d == e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a, b; int c(e, f) { return e * f; } int main() { int *d = &a; if (c(&a == d, 3) <= 1) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c, d, b; int main() { int *e = &a; d = 4; c = e != &a | d; if (c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); char b, a; int c(f) { return f; } int main() { char *d = &b, *e = &b; if ((d != e | c(-1L)) >= 0) printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; unsigned char b = 154; int c; int *d = &c; const int e = 0; int main() { *d = (e | a) <= b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a = 1, c, d, b, *f = &a; void g(int *h) { int *e = &b; *h = 9 ^ (d = e == &b); if (*h) *f = 0; } int main() { g(&c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 51126; short c; int main() { if (c >= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, e, i; int *c, *f = &a, *g = &e, *h = &e, *j = &b; int **d = &c; int main() { { int k = 1; *d = &k; } { int l = 0; for (; i;) ; *j = 0; *h = l; *d = &l; int m = *g; *f = m; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; long long b; int *c = &a; char d = 2; int main() { long long *e = &b; *c = (e == &b) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long *a; static long long **b = &a; int c, d; int *e = &c; int main() { long long **f = &a; int g = 4060604537; (d = (b != f) < g) && (*e = 1); &g; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a = 8, c; int *b = &a; int main() { int *d = &a; c = *b; *b = (d == &a) >= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a; void b(c) { for (; a <= 0; a = 1) if (c) break; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; int main() { char *c = &a; b = -(&a == c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; int b, d; char *c = &a; int f(g, h) { return g + h; } int main() { int *e = &b; d = f(&b != e, 9); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; } b = {1}, c; int a; int main() { for (;;) { b = c; b = b; break; } b.d || printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; short b; short *c = &b; int d; int f(g, h) { return g + h; } int main() { unsigned *e = &a; d = f(e != &a, 6); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; int main() { int *d = &b; *c = &b != d; *c |= 4; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a, d; int *b, *e = &a; static int **c = &b; int main() { int **f = &b; *e = 10 ^ (d = c == f); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c; int e(f, g) { return f + g; } int main() { c = &a; char *d = &b; *c = e(d != &b, 2); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; char *c = &a; int *d = &b; void e(int *f) { *c = *f; } void g(f) { *d = f; e(&b); } int main() { g(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; char b; char *d = &b; int main() { int *e = &a; *d = (e == &a) < (c = 11); printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; int b; int main() { int c = 7; short *d = &a; b = c ^ d != &a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; char *b = &a; int c = 7; unsigned short *d; unsigned short e; int main() { *b = c > (&e == (d = &e)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b = 4, d; char c; char *e = &c; void h(int *i) { short *f = &a, *g = &a; *i = (f == g) >= b; if (*i) *e = 1; } int main() { h(&d); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, d; unsigned b; static unsigned *c = &b; int e(f) { return f + 1; } int main() { d = e(c == &b); d || printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a; char b; int c(d) { for (; a;) ; return d; } int main() { if (c()) printf("%d\n", b); return 0; } 
int printf(const char *, ...); unsigned short ***a[2]; int b; int *c = &b; int e(f, g) { return f * g; } int main() { unsigned short ****d = &a[0]; *c = e(51, d != &a[1]); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c, e; static int b = 4; int *d = &a; int main() { e = 0 < c & b; unsigned char f = e + 140; *d = f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; long long b; int *c = &a; int main() { long long *d = &b; int e = 2; *c = &b != d ^ e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 52328; short c; int main() { if (c <= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int main() { char *b = &a; *b = -(&a == b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; short *c; int *d = &a; int e(f, g) { return f * g; } int main() { *d = e((c = &b) == &b, 9); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; short c; int main() { int *d = &a; *d = 0; *d = *b; if (*b) printf("%d\n", c); return 0; } 
int printf(const char *, ...); char a; char *b = &a; short c; static short *d = &c; int e, f; int main() { e = d == &c; f = 1 + e; *b = f; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b = 5; unsigned c; int *d, *f = &a; int **e = &d; int main() { unsigned *g = &c; d = &b; *f = (g == &c) < **e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; int *b = &a; int d(e, f) { return e + f; } int main() { int **c = &b; *b = d(c != &b, 9); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; unsigned short *b; int *c = &a; int main() { unsigned short **e = &b, **f = &b; d = 8; *c = (e == f) >= d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c, e; int *b, *g = &c; int **d, **f = &b; int main() { int ***h = &d, ***i = &d; *f = g; a = 8; e = (h == i) < a; *b = e; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b; unsigned c; int *d = &b, *e = &b; void h(i) { unsigned *f = &c, *g = &c; *e = i > !(f != g); } int main() { h(5); a = *d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); struct b { int f; }; int a, c; int *e = &a, *g = &c; void h(int **i) { struct b d = d; if (d.f) *g = 1; **i = c; } int main() { h(&e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d, f, g, h, i, j, k, l, m, o; short e; int p[4]; int q(r) { return 0 / r && 0 / o && r && 0 / 0 ?: r; } void s() { short n; h = 0; for (; h < 4; h++) p[h] = 1; n = e < 0 ? e : e > 1; g = p[0] ^ n<0> p[0]; l = a && b ?: 1; for (; f; f = 1) k = e; m = q(e || i); l = 1 & c ^ c < 0 ?: m - 1; j = d == 0 ? l : 0 % 0; } int main() { e = 1; s(); printf("%d\n", j); return 0; } 
int printf(const char *, ...); char a; short b; short *c = &b; int d; int main() { char *e = &a; d = 2; *c = e == &a | d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b; int c(d) { return d ^ ~2147483647; } int main() { int **e = &b, **f = &b; c(e != f) || printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%x\n", a.d); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); unsigned short *a; long b; long *c = &b; int d, e; int main() { unsigned short **f = &a, **g = &a; for (; d != 7; ++d) e = (g == f) >= d; *c = e; printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); int a, b; unsigned c; int *d = &a; int main() { int *e = &b; *d = --c > (e == &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; char b; short *c = &a; int d; int f(g) { return g + 1; } int main() { char *e = &b; d = f(e == &b); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, b; int *e = &b; void g(int *h, int *i) { int *c = &a, *d = &a; *h = (c != d) - *i; } int main() { int f = 1; g(e, &f); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, c; static int b[] = {0, 0, 0, 0, 0, 0, 0, 0, 1}; int main() { c = a ?: 1; if (b[8]) c = a; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; int main() { int *d = &c; *b = -(d == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &a; void e(f) { int *d = &b; if ((&b == d) < f > (0 & 1UL)) *c = 1; } int main() { e(2); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &b; int main() { *c = a; *c = *c; printf("%d\n", b.f); return 0; } 
int printf(const char *, ...); short a; short *b; int c; int d(e) { return e + 1; } int main() { c = d((b = &a) == &a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a[7][1]; int b, c, h; int *d = &c, *e = &b, *f, *g; int main() { int i = *e = 1; for (; i != 4; i = i + 1) if (b) ; else { g = &a[5][0]; d = g; } d = f = &a[5][0]; *f = 1; for (; h < 7; h++) printf("%d\n", a[h][0]); return 0; } 
int printf(const char *, ...); struct { int d; long e; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); char a, b; char *c = &b; int d; int main() { int e = 171; char f = e; d = a && a || a <= 0 && a < f; *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = -1L; const int c = 0; int main() { unsigned d = b; a = c <= (1L | d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d = 2; int *b = &a; unsigned c; unsigned *e; int main() { *b = (&c == (e = &c)) >= d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; int d(e, f) { return e - f; } int main() { char *c = &a; b = d(c == &a, 807100951); printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a, b, *d = &a; short *c; int main() { *d = (c = &b) != &b; *d |= 9; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d, e = 1; int *b = &a; static int *const *c = &b; int main() { int **f = &b; *f = &e; *f = *c; d = **f; printf("%d\n", d); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a, b, d; unsigned short c; int main() { b = 1; for (; b; b = 0) { c = -1; d = (unsigned char)(a |= c) | 1; } printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a; int *b = &a; int c[2]; int main() { int d = 1; *b = (c == &c[1]) - d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; int **b; static int ***c = &b; int f(g, h) { return g + h; } void i(int *g) { int ***e = &b; d = f(3, c != e); *g = d; } int main() { i(&a); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; static const int *c = &a; int main() { int *d = &a; *d = 1; for (; b != 1; b = 1) if (*c) break; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); short a; int b = 1; static const int *c = &b; short *d = &a; int main() { int *e = &b; *e = 0; if (*c) *d = 1; *e = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const short a = 0; int b, c; unsigned short d; int main() { c = -9L; d = c; b = a < d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); static unsigned short a, c = 1; char *b; int d, h, i; unsigned short *e; void l() { unsigned short *j = &a; if (i) { unsigned short *k = &c; *k = *j = h; *b = 0; } } void m() { unsigned short f = 1; n: l(); if (f) { unsigned short *g = &c; d = &f == (e = 0); *g = 0; } else goto n; } int main() { m(); printf("%x\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d; int main() { b = a; int *e[3]; for (; d < 3; d++) e[d] = &a; int **f = &e[1]; **f = 1; *f = &c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 161; char c; int main() { c = b; if (c ^ b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned b; int main() { int c = 0; unsigned *d = &b; a = &b != d ^ ~c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 5, b; int *c = &b; int main() { int *d = &a; *c = a > (d == &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int g; } b, d = {1}; int a, c; static int h() { for (; a <= 0; a++) { int *e = &d.g, *f = &b.g; for (; c; c--) { if (*e) break; f = e; } if (*f) return 0; *f = 0; } return 0; } int main() { h(); printf("%d\n", d.g); return 0; } 
int printf(const char *, ...); int a; const short b = 0; unsigned short c = 33821; int main() { a = b < c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int d = 886; b = a ? 0 : 1; char e = b, f = d; e > 0 && e > 127 - f || printf("%d\n", c); return 0; } 
int printf(const char *, ...); long long a; int b = 9; long long *c; int main() { long long *d = &a; *d = (d == (c = d)) < b; printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); const unsigned short a = 38824; int b; short c; int main() { b = c < a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d, b; int *c = &a; int main() { int *e = &b; d = 30; *c = e != &b ^ d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 11, b; short c; short *d = &c; int main() { int *e = &b; *d = a <= (e == &b); printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {1}, b; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); char a; int c, f = 1; int *d = &c, b; char *const e = &a; int main() { *d = 7; char *g = &a; if (f > ((e == g) < c)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a, b = {1}; int main() { struct d *c = &a; *c = b; *c = *c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); char a; char *b; int c; int main() { char *d = &a; c = -((b = d) == d); *d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int c(f) { return f; } int main() { int *d = &b; int e = 10; if (c(&b != d ^ e)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d; void g(int *h) { int *e = &b; *e = 1; a = 0; for (; a != 8; ++a) { int *f = &b; *h = *e; *f = c; } *h = 0; } int main() { g(&d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1, e, f; static int b[] = {0}; unsigned char c; int g() { int d = 0; for (;;) { e = 0; for (; e <= 0; e = e + 1) f = a < 0 ? a : a << 1; if (c >= b[0]) for (; d <= 1; d++) { e = 0; for (; e <= 0; e = e + 1) f = a < 0 ? a : a << 1; } else continue; return 0; } } int main() { g(); printf("%d\n", f); return 0; } 
int printf(const char *, ...); const unsigned char a = 251; char b; int c; int main() { c = b <= a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; int b[2]; char c; char *d = &c; void e(f) { a = f > (b != &b[1]); } int main() { e(3); *d = a; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, d; int **b; int *c = &a; int e(f, g) { return f * g; } int main() { d = e(&c == (b = &c), 5); **b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, b; static const int *c = &a; int main() { int *d = &a, *e = &a; *e = 0; for (; b <= 0; b++) if (*c) break; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); static int a = 5, b, g; char c; int *d = &b, *e = &b; char *f = &c; short h; int main() { short *i = &h; *e = i != &h | a; g = *d; *f = g; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, c, b; int main() { int *d = &b; c = d == &b; a = c ^ 9; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); short a; short *b = &a; static short **c = &b; int d, e; int main() { d = c == &b; e = 1 + d; *b = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a; int b, d; int *c = &b; int g(h, i) { return h + i; } int main() { int **e = &a, **f = &a; d = g(5, f != e); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, e; int *c, *d = &b; int main() { int f = -1L; *d = (a = f) <= (&e != (c = &e)); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f, g, h, i, j, k; int main() { for (; g < 1; g++) { j = 0 > 1 >> k ? k : k << k; if (j) c = 1; for (; e; e++) i = b >= 7 >> b ?: a; for (; h; d++) for (; f <= 0; f++) ; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct f { int j; } a, *b = &a; int c; int main() { { struct f d = {1}; for (; c;) { int *e[] = {&d.j}; *e[0] = 0; } } { struct f g = {}; int *h = &g.j; int **i[] = {&h}; *b = g; } printf("%d\n", a.j); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a, b = {1}; int main() { a = b; struct d *c = &a; *c = *c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); int a, d; short b; int *c = &a; int main() { short *e = &b; d = -(&b == e); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 5, c; int *b, *e; int **d = &b; int main() { int *f = &a; e = &c; *d = e; c = 0; for (; c != -25; --c) { int *g = &c; if ((*d == g) >= a) *f = 0; if (a) b = 0; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, d; short b; int *c = &a; int main() { short *e = &b; d = 9; *c = (e == &b) < d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int *d = &a; b = 5; c = (d == &a) >= b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {0, 1}, b; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a; int *b = &a; int **const c = &b; static int **const *d = &c; int main() { **d = 0; a = (**d = *c) != 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { long e; int f; } a, b = {1}; int main() { struct d *c = &b; *c = a; *c = *c; printf("%d\n", (int)b.e); return 0; } 
int printf(const char *, ...); short *a; short b, e; short *c = &b; int d; int main() { d = -((a = &e) == &e); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; char b; short *c = &a; int d; int f(g, h) { return g + h; } int main() { char *e = &b; d = f(3, e != &b); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; void d(int *e) { *e = 1; } int main() { int *c = &a; d(&a); *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; short c, d = 35054; int main() { b = 3; for (; b; b--) { short e = b; c = d * e; a = c; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, d, e; int *c = &b; int main() { int *f = &a; e = &a == f; d = -e; *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); unsigned char a; char b, d; const int c = 185; char *e = &b; int main() { *e = d <= (a = c); printf("%d\n", b); return 0; } 
int printf(const char *, ...); unsigned **a; short b; short *c = &b; int d; int main() { int e = 6; unsigned ***f = &a, ***g = &a; d = e | f != g; *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; int e; } a = {1}, b[1][2][1]; int main() { b[0][1][0] = a; b[0][1][0] = b[0][1][0]; printf("%d\n", b[0][1][0].c); return 0; } 
int printf(const char *, ...); int a; int main() { int b = 10; int *c = &a; *c = b ^ &a == c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static int *b = &a; static const int *c = &a; int main() { a = 0; *b = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int **a; short b; short *c = &b; int d; int g(h) { return h - 1; } int main() { int ***e = &a, ***f = &a; d = g(e != f); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a; unsigned char b = 255; int *c = &a; const char d = -1L; int main() { *c = b == d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, b; int *c; int d(e) { return e << 1; } void f(int *e) { if (d(e == (c = e))) a = 0; } int main() { f(&b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b, e; short *c = &a; int *d; int f(g, h) { return g + h; } int main() { e = f(&b != (d = &b), 3); *c = e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int main() { int c = -10L; int *d = &b; a = c <= (d != &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, f; int *b, *e = &a; int **const c = &b, **g = &b; static int **const *d = &c; int main() { *g = &f; **d = e; **d = *c; **c = 1; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; char *b; int c, f; short *d = &a; int *e = &c; int main() { char **g = &b, **h = &b; f = 9; *e = g != h ^ f; *d = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b = 147; int main() { a = (int)2908944280 % (unsigned)b != 2908944280; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { long d; int e; } a, b = {0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.e); return 0; } 
int printf(const char *, ...); short a; short *b = &a; long long c; int d; int f(g, h) { return g - h; } int main() { long long *e = &c; d = f(e == &c, 4); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); int a, c, d; int *b; int main() { c = &a != (b = &a); d = 8 ^ c; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, b; int e(f) { return 1 + f; } int main() { int *c = &a, *d = &a; b = e(c == d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int main() { int *b = &a; *b = -(&a == b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b = 10; unsigned char c; char *d = &a; unsigned char *e; int main() { *d = b > ((e = &c) == &c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned a; short b; short *c = &b; int d; int main() { unsigned *e = &a; d = 8; *c = &a != e | d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; static int *b = &a; static const int *c = &a; int main() { *b = 1; *b = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static int *b = &a; static const int *c = &a; int main() { for (; a != -18; --a) ; *b = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; unsigned long long **b; int e(f, g) { return f + g; } int main() { unsigned long long ***c = &b, ***d = &b; if (0 >= e(-1L, c != d)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); union { char f; int g; } a; char *b = &a.f; char **c = &b; int main() { char ***d = &c; int e = 6; ***d = d == &c ^ e; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); const unsigned short a = 65535; int b; short c; int main() { if (c > a) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { unsigned h; } c = {1}; int a = 1, b, e, f; int d[3]; int main() { e = 0; for (; e < 3; e++) d[e] = 6; unsigned g[15]; if (a) ; else g[14] = c.h; for (; b; b++) f = d[0] == (0 || g[14]); printf("%d\n", c.h); return 0; } 
int printf(const char *, ...); short b; char c; static char *d = &c; short *e = &b, *f = &b; int a; int g(h) { return h + 1; } int main() { f != e | g(d == &c) || printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; const unsigned short b = 65530; int c; int main() { c = a > b; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 65535; short c; int main() { a = c < b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c = &b; int f(char g) { return g; } void h(int *g) { int *d = &a; int e = 1; if (f(e + (d == g))) *c = 1; } int main() { h(&a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short b; const unsigned short c = 42035; int main() { a = b <= c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, c, d; static const int *b = &a; int main() { int *e = &a; *e = 0; d = *b; if (d) { int *f = &a; *f = 0; } else { int *g = &a; *g = c++; } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c = 4; int *d = &b; int main() { int *e = &a; *d = (&a == e) < c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int b; int c; } a, d = {1}; int main() { a = a = d; printf("%d\n", a.b); return 0; } 
int printf(const char *, ...); char a; int b, c, d; void e(unsigned char f) { if ((d = a = f) >= f) ; else for (; b <= 0; b++) ; } int main() { e(c | 143); printf("%d\n", b); return 0; } 
int printf(const char *, ...); char a; char *b = &a; short c; int d; int f(g) { return 1 + g; } int main() { short *e = &c; d = f(e == &c); *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, c = {1}, *b = &a; int main() { *b = c; *b = *b; printf("%x\n", a.d); return 0; } 
int printf(const char *, ...); int a, b, d; int *c = &b; int main() { int *e = &a; d = 11; *c = d > !(e != &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; int **const b = &a; int c, d; int f(g, h) { return g - h; } int main() { int **e = &a; d = f(b != e != 1, 4); if (1 == d) printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int d; } a, c = {1}, *b = &a; int main() { *b = c; *b = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int b, a; int c(e, f) { return e + f; } int main() { int *d = &b; if (c(d != &b, 6)) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *c, *d = &b; int e(f) { return f - 1; } int main() { *d = e(&a != (c = &a)); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1; void b(c) { if (c) a = 0; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c : 1; } a; int b = 1; int main() { a.c = b != 0; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); char a; int b; char *c = &a; int main() { int d = 5; int *e = &b; *c = &b != e ^ d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int *a, *c; int b = 7, d; int **e = &c; int main() { int **f = &a, **g = &a; d = (f == g) < b; *e = &d; if (*c) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b, c; int e(char f, char g) { return f > 0 && f > 127 - g || g < 0; } int main() { int d = 878; b = e(a || c < 1, d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b; int *c, *e = &b, *f = &a, *i = &b; static int d = -1L; unsigned char *g; unsigned char h; int **j = &c; int main() { *j = i; int k = d; k |= (g = &h) == &h; *e = k; *f = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int f; } a, b = {1}, c, *d = &c, *e = &b; int main() { *e = a; *e = b; for (;;) { *d = b; break; } printf("%d\n", c.f); return 0; } 
int printf(const char *, ...); long long a; int b, c = 1; int *d = &b; long long *e; int main() { c++; *d = ((e = &a) == &a) >= c; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; unsigned short **b; int *c = &a; int f(g) { return g - 1; } int main() { unsigned short ***d = &b, ***e = &b; *c = f(d != e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); char a; int b; int main() { int *c = &b; char *d = &a, *e = &a; *d = &b != c; *e ^= 8; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; int *b = &a; void d(e) { *b = e; } int main() { for (; c <= 1; c++) { if (*b) break; d(); } printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { int d = b; a = 0; for (; a >= 0; a--) if (c) ; else b = 1; b = 0; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, b = 1; static const int *c = &b; int main() { b = 0; a = *c; b++; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; void d(e) { int *c = &b; a = e > (&b == c); } int main() { d(6); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int h; } b, c = {1}; int *a; int **d = &a; int e; int main() { int *f = &c.h; for (; e < 1; e = e + 1) { *d = f; if (*f) { int *g = &b.h; *d = g; } } *a = 1; printf("%d\n", b.h); return 0; } 
int printf(const char *, ...); int a; int *const b = &a; static int *const *c = &b; int main() { *b = 1; *b = **c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned char a = 128; char b; int main() { if (b > a) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a; const unsigned char b = 150; char c; int main() { if (c > b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); unsigned char b; short a; unsigned char *c; int d, e; int main() { e = -(&b == (c = &b)); unsigned f = e; d = f > 1; if (d) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; *c = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, d, *c = &a, *e = &b; int f(char h, char i) { return h > 0 && h > 127 / i <= 0; } int main() { int g = 1914; *e = f(0 >= d && c, g); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a = 1, b, c; int e(char f, char g) { return f > 0 && f > 127 - g || g < 0; } int main() { int d = 327; b = e(c || a, d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int d; } a, c = {1}, *b = &a; int main() { *b = c; *b = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); struct { int d; int e; } a, b; int c; int main() { for (; c < 10; c++) { b = a; a.d = 0; for (; a.d >= 0; a.d--) b = b; } printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int *a; int b; int *c = &b; short d; int **e = &a; int main() { *e = c; int f = 8; short *g = &d; *a = g != &d ^ f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a, b = {0, 0, 1}; int main() { struct d *c = &a; *c = b; a = *c; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a = {0, 1}, b; int main() { a = b; a = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, b = 1; void c(d) { for (; b; b--) a = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%x\n", a.f); return 0; } 
int printf(const char *, ...); int a[2]; static int *b = &a[1]; int c; int *d = &c; int main() { int *e = &a[1]; *b = 1; *d = *e; *b = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c, d, e, f; int main() { b = 0; f = a + 1; for (; b < 1; b = f) { d = c; if (e) ; else d = 1; } d = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a; void c(int *d) { a = *d > 0; } int main() { int *b; int e; c(&e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); static int a = 2, b; int *c = &b; short d; int main() { short *e = &d; *c = e != &d ^ a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; int b, c; int main() { int **d = &a, **e = &a; b = -1L; c = (d != e) >= b; if (c) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a; short *b; short **c; int main() { int d = 0; short **e = &b; a = 0 == d != ((c = &b) == e) ^ 5; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a, b = {0, 0, 1}, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); static unsigned a = 95366; int b; short c; int main() { unsigned short d; b = c == a; d = 65526 + b; printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, c; unsigned *b = &a; int e(f) { return 1 + f; } int main() { unsigned **d = &b; c = e(&b == d); *b = c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct h { short i; int j; int k; } a[5][1], c = {1}; char b; short *d = &a[4][0].i; char *e = &b; int f; int main() { struct h *g = &a[4][0]; *g = c; *g = *g; f = *d; *e = f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, d; static int *b = &a; static const int *c = &a; int main() { int *e = &a; *b = 1; d = *c; *e = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int ***a; int b, d, e; int *c = &b; int h() { int ****f = &a, ****g = &a; e = 6 > -(unsigned)(g == f); if (e) return 0; return 1; } int main() { d = h(); *c = d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { b = a; b = b; printf("%d\n", b.c); return 0; } 
int printf(const char *, ...); union { int g; long long h; } b; int a = 11; int *c; long long *d = &b.h; int main() { int **e = &c, **f = &c; *d = a > (f == e); printf("%d\n", b.g); return 0; } 
int printf(const char *, ...); struct i { int j; }; int a; short b; static struct i c = {3124901650}; unsigned char *d; static unsigned char **e[] = {0, 0, 0, &d}; int *const f = &a; short *g = &b; int main() { int *h = &a; *h = e[3] != &d; *g = c.j > *f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a, b = 1, c, d; const int e[][4][1] = {{}, 0, 0, 0, 1}; unsigned f; int g() { for (;;) { if (e[1][3][0] | f) b = c; for (;;) { if (a) break; d++; for (; d;) return 0; for (;;) ; } } } int main() { g(); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a = 1, c; static const int *b = &a; int main() { int *d = &a, *e = &a; *e = 0; if (*b) c--; *d = 0; printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a; unsigned short *b; static unsigned short **c = &b; int *d = &a; int main() { int e = 9; unsigned short **f = &b; *d = (c != f) + e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, e; int *c, *f = &b; int **d = &c; int i() { int g = 1; *f = 0; for (; e < 1; e = 1) { *d = &g; if (*c) return 0; } return 0; } int main() { { int h = 0; for (; a;) *d = &h; } i(); printf("%d\n", e); return 0; } 
int printf(const char *, ...); struct c { int d; } a; int b, e; int main() { struct c f; g: for (; b;) ; a = f; if (e) { f.d = 0; goto g; } printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a, d; int *b = &a; char c; int main() { int e = 11; char *f = &c; d = &c == f | e; *b = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; void c(d) { char e = d + b; a = e; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { int e; unsigned f : 19; } b; int a; int main() { struct d c = b; a = 0 <= (c.f = ~c.e); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; short b; short *c = &b; int d(e, f) { return e + f; } int main() { int *g = &a; *c = d(g != &a, 5); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a, *d = &a; *c = 1; *d = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int e(f) { return f << 1; } int main() { int *c = &a, *d = &a; if (e(c == d)) printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; } c = {40}; int a, b; int h(i) { return i; } int main() { int *f = &a; struct d g = c; if (h(g.e > (f == &a))) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; unsigned b; int *c = &a; int main() { unsigned *d = &b; int e = -7L; *c = (d == &b) < e; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; long long b; int c, d; short *e = &a; int main() { long long *f = &b; d = f != &b ^ (c = 4073709551615); *e = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { long e; int f; } a, b = {0, 1}; int main() { struct d *c = &a; *c = b; *c = *c; printf("%d\n", a.f); return 0; } 
int printf(const char *, ...); int a; char b; int d(e) { return e - 1; } int main() { char *c = &b; a = d(&b != c); printf("%d\n", a); return 0; } 
int printf(const char *, ...); const unsigned short a = 56644; int b; short c; int main() { b = c <= a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int b[2]; int *c = &a; int main() { *c = -(b != &b[1]); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, g, i; short b; int *const c = &a, *h = &a; int *const d = &a; static const int *e = &a; short *f = &b; int j(const int **k) { i = **k; *c = i; return *h; } int main() { *d = 0; g = j(&e); *f = g; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; static const int *b = &a; int main() { int *c = &a; *c = 1; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); long long a; int b; long long *c = &a; int main() { int *d = &b; int e = 3; *c = e |= d == &b; printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); char a; char *b; int c; int main() { int d = 7; c = d ^= &a == (b = &a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); struct { int d; } a, b = {1}, *c = &a; int main() { *c = b; *c = a; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); long a; long *b = &a; int *c; int d; int e(f) { return f + 1; } int main() { *b = e((c = &d) == &d); printf("%d\n", (int)a); return 0; } 
int printf(const char *, ...); int a; char b; int main() { char *c = &b; int d = 11; if ((c != &b ^ d) != 1) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {1}; int main() { a = b; a = a; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...); short *a; long b; int main() { short **c = &a, **d = &a; int e = 3; if ((c != d ^ e) <= 1) printf("%d\n", (int)b); return 0; } 
int printf(const char *, ...); int a, *b = &a, *c = &a, d, f; int *e; int g(h, i) { return h - i; } int main() { *b = g(&f == (e = &f), 5); if (*c) printf("%d\n", d); return 0; } 
int printf(const char *, ...); int a, c; char b; int main() { char *d = &b; a = (c = &b != d) | 4; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct d { int e; int f; int g; } a, b = {0, 0, 1}; int main() { struct d *c = &b; *c = a; *c = *c; printf("%d\n", b.g); return 0; } 
int printf(const char *, ...); char a; int main() { char *b = &a; int c = 3087519663; if ((b == &a | c) >= 0) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a; unsigned b; int *c = &a; int main() { int d = 3; unsigned *e = &b; *c = (e == &b) - d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct f { int g; }; struct h { struct f i; int j; } a, *b, *c = &a; int main() { struct h d = {}; struct h *e = &d; *c = *e = d; b = &d; printf("%d\n", a.i.g); return 0; } 
int printf(const char *, ...); struct c { int d; } a; int main() { struct c b = b; a = b; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); short a; int b; int *c = &b; const unsigned short d = 59987; int main() { *c = a >= d; printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; int *b; short *c = &a; int d, e; int f(g) { return g - 1; } int main() { d = f(&e != (b = &e)); *c = d; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; char b; int *c = &a; char *d; int main() { int e = 4; *c = e ^= &b == (d = &b); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int ****a; static int *****b = &a; unsigned d(e) { return e + 1; } int main() { int *****c = &a; if (d(b == c) > 1) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int **a; int b, c; int ***d; int ****e = &d; int *f = &b; int main() { c = 8; *f = c <= ((*e = &a) == &a); printf("%d\n", b); return 0; } 
int printf(const char *, ...); short a; unsigned b; unsigned *c; int d; int e(f) { return 1 + f; } int main() { d = e(&b == (c = &b)); d || printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c, d; int main() { int *e = &a; c = e == &a; d = c * 8; if (d) printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; char b; char *c = &b; int e(f, g) { return f - g; } int main() { int *d = &a; *c = e(&a == d, 8); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; int b, e; int **c = &a; unsigned d; int *f = &b; int h(i) { return i << 1; } int main() { *c = f; unsigned *g = &d; e = h(g == &d); *a = e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int *a; int b; int *c = &b; int f(g) { return g + 1; } int main() { int **d = &a, **e = &a; *c = f(e == d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; const unsigned short b = 61101; short c; int main() { if (c >= b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b, c; int main() { c = a ?: 1; b = 0; for (; b != -4; --b) c = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...), a; void b(c) { if (c) for (; a <= 0; a++) ; } int main() { b(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; unsigned *c; unsigned **d; int main() { unsigned **e = &c; int f = -9L; &f; b = (e == (d = &c)) >= f; if (b) printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1, d; int *b = &a; static int *const *c = &b; int main() { int **e = &b; b = &d; **c = 0; *e = 0; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; short b; static const int *c = &a; static int *d = &a; short *e = &b; int main() { a = 0; *e = *c; *d = 0; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; int *b = &a; char *c; char d; int main() { int e = 3; *b = e ^ &d != (c = &d); printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; void c(d) { *b = d; } int main() { c(); printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c; int d; } a, b = {0, 1}; int main() { b = a; b = b; printf("%d\n", b.d); return 0; } 
int printf(const char *, ...); int a, b; int *c; int e(f, g) { return f - g; } int main() { for (;;) { int *d = c = &b; a = e(c == d, 5); break; } printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; short *b = &a; char *c; char d; int e(f) { return f + 1; } int main() { *b = e(&d == (c = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a; static int *b = &a; static const int *c = &a; int *const d = &a; int main() { *b = 1; *d = *c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, b; int *const c = &a, *d = &b, *e = &a; unsigned f; int main() { unsigned *g = &f; *c = -1L; *c |= g == &f; *d = *e; printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a; short *b; int *c = &a; short d; int e(f) { return 1 + f; } int main() { *c = e(&d == (b = &d)); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a, c; short b; int main() { short *d = &b; c = (&b == d) >= a + 7; if (c) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); char a; char *b = &a; short c; short **d; short ***e; int f, h; short ***const g = &d; short *i = &c; void j(char *k) { int *l = &f; *l = (e = &d) != g; *k = ~0 > f; h = *b; *i = h; } int main() { j(&a); printf("%d\n", c); return 0; } 
int printf(const char *, ...); int a, b, c; union e { int f : 9; }; int main() { union e d; c = a - 56306; d.f = c; b = 46 <= d.f; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct e { int f; int g; } a, b = {0, 1}; int main() { struct e *c = &a, *d = &a; *c = b; *d = a; printf("%d\n", a.g); return 0; } 
int printf(const char *, ...); char a; unsigned char *b = &a; int main() { int c = 2; unsigned char **d = &b; *b = d != &b ^ c; printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a[5]; static int *b = &a[4]; int main() { int *c = &a[4]; *b = 1; *b = *c; printf("%d\n", a[4]); return 0; } 
int printf(const char *, ...); int a, f; int *b = &a; static int *const *c = &b; void g(int *h) { int **d = &b, **e = &b; *d = h; *e = *c; } int main() { g(&f); **c = 1; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int b; int *c = &b; int e(f) { return f - 1; } int main() { short *d = &a; *c = e(&a != d); printf("%d\n", b); return 0; } 
int printf(const char *, ...); int a[] = {0, 0, 0, 0, 0, 1}; static int *b = &a[5]; int main() { int *c = &a[5]; *b = 0; *b = *c; printf("%d\n", a[5]); return 0; } 
int printf(const char *, ...); unsigned a; int b(c) { return 1 + c; } int main() { unsigned *d; if (b(&a == (d = &a))) printf("%d\n", 0); return 0; } 
int printf(const char *, ...); int a, b; int d(e, f) { return e * f; } int main() { int *c = &b; a = d(c == &b, 5); printf("%d\n", a); return 0; } 
int printf(const char *, ...); int a = 1; static const int *b = &a; int main() { int *c = &a; a = 0; *c = *b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int c : 1; } a; int b = 1; int main() { a.c = 0 != b; printf("%d\n", a.c); return 0; } 
int printf(const char *, ...), b; int a; unsigned long long *c; unsigned long long d; int main() { b = 5; if ((&d != (c = &d) ^ b) > 1) printf("%d\n", a); return 0; } 
int printf(const char *, ...); struct { int d; int e; int f; } a = {1}, b, *c = &a; int main() { *c = b; *c = *c; printf("%d\n", a.d); return 0; } 
int printf(const char *, ...); int a = 5, b; unsigned c; int *d = &b; int main() { unsigned *e = &c; *d = (e == &c) >= a; printf("%d\n", b); return 0; } 
int printf(const char *, ...); struct d { int e; long f; } a, b = {0, 1}; int main() { struct d *c = &a; *c = b; *c = *c; printf("%d\n", (int)a.f); return 0; } 
int printf(const char *, ...); short a, b; short *c = &a; unsigned short *d; unsigned short e; int main() { b = 5 ^ (*c = &e != (d = &e)); *c = b; printf("%d\n", a); return 0; } 
int printf(const char *, ...); short a; int main() { short *b = &a; int c = 7; c |= &a != b; *b = c; printf("%d\n", a); return 0; } 
